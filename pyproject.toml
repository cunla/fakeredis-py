[build-system]
requires = ["poetry_core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "fakeredis"
packages = [
    { include = "fakeredis" },
    { include = "LICENSE", to = "fakeredis" },
]
version = "2.28.0"
description = "Python implementation of redis API, can be used for testing purposes."
readme = "README.md"
keywords = ["redis", "RedisJson", "RedisBloom", "tests", "redis-stack"]
authors = [
    "Daniel Moran <daniel@moransoftware.ca>",
    "Bruce Merry <bmerry@ska.ac.za>",
    "James Saryerwinnie <js@jamesls.com>",
]
maintainers = [
    "Daniel Moran <daniel@moransoftware.ca>",
]
license = "BSD-3-Clause"
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Development Status :: 6 - Mature',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Topic :: Software Development :: Libraries :: Python Modules',
]
homepage = "https://github.com/cunla/fakeredis-py"
repository = "https://github.com/cunla/fakeredis-py"
documentation = "https://fakeredis.readthedocs.io/"
include = [
    { path = "test", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.7"
redis = [{ version = ">=4", python = "<3.8" }, { version = ">=4.3", python = ">3.8" }]
sortedcontainers = "^2"
typing-extensions = { version = "^4.7", python = "<3.11" }
lupa = { version = ">=2.1,<3.0", optional = true }
jsonpath-ng = { version = "^1.6", optional = true }
pyprobables = { version = "^0.6", optional = true }


[tool.poetry.extras]
lua = ["lupa"]
json = ["jsonpath-ng"]
bf = ["pyprobables"]
cf = ["pyprobables"]
probabilistic = ["pyprobables"]

[tool.poetry.group.dev.dependencies]
black = { version = "^24.4.2", python = "^3.9" }
flake8 = { version = "^7", python = "^3.9" }
flake8-pyproject = { version = "^1", python = "^3.9" }
mypy = { version = "^1.10", python = "^3.9" }

[tool.poetry.group.test.dependencies]
coverage = { version = "^7", python = "^3.9" }
pytest = { version = "^8.3", python = "^3.9" }
hypothesis = { version = "^6.111", python = "^3.9" }
pytest-timeout = { version = "^2.3.1", python = "^3.9" }
pytest-asyncio = { version = "^0.24", python = "^3.9" }
pytest-cov = { version = "^6.0", python = "^3.9" }
pytest-mock = { version = "^3.14", python = "^3.9" }
pytest-html = { version = "^4.1", python = "^3.9" }

[tool.poetry.group.docs.dependencies]
python-dotenv = { version = "^1", python = "^3.9" }
pygithub = { version = "^2.3", python = "^3.9" }

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/cunla/fakeredis-py/issues"
"Funding" = "https://github.com/sponsors/cunla"
"Documentation" = "https://fakeredis.moransoftware.ca/"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "fake: run tests only with fake redis",
    "real: run tests with a locally running real Redis server",
    "disconnected",
    "min_server",
    "max_server",
    "decode_responses",
    "unsupported_server_types",
]
asyncio_mode = "strict"
generate_report_on_test = true

[tool.mypy]
packages = ['fakeredis', ]
strict = true
follow_imports = "silent"
ignore_missing_imports = true
scripts_are_modules = true
check_untyped_defs = true

[tool.flake8]
max-line-length = 120
exclude = [
    '.venv',
    '.github',
    '__pycache__',
]
ignore = ["E203", "E501", "W503"]

[tool.black]
color = true
line-length = 120
target-version = ['py310']
include = [
    "fakeredis",
    "test",
]
exclude = '''
 (
  /(
    | \.git          # root of the project
    | \.github
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | .*/\.hypothesis/.*
  | .*/__pycache__/.*
  | /fakeredis/commands.json
)
'''