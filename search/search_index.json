{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"fakeredis: A python implementation of redis server","text":"<p>FakeRedis is a pure-Python implementation of the Redis key-value store.</p> <p>It enables running tests requiring redis server without an actual server.</p> <p>It provides enhanced versions of the redis-py Python bindings for Redis.</p> <p>That provides the following added functionality: A built-in Redis server that is automatically installed, configured and managed when the Redis bindings are used. A single server shared by multiple programs or multiple independent servers. All the servers provided by FakeRedis support all Redis functionality including advanced features such as RedisJson, GeoCommands.</p> <p>For a list of supported/unsupported redis commands, see Supported commands.</p>"},{"location":"#installation","title":"Installation","text":"<p>To install fakeredis-py, simply:</p> <pre><code>pip install fakeredis        ## No additional modules support\n\npip install fakeredis[lua]   ## Support for LUA scripts\n\npip install fakeredis[json]  ## Support for RedisJSON commands\n\n# Note on mac you need quotes:\npip install \"fakeredis[json]\" \n\npip install fakeredis[probabilistic,json]  ## Support for RedisJSON and BloomFilter/CuckooFilter/CountMinSketch commands\n</code></pre>"},{"location":"#how-to-use","title":"How to Use","text":""},{"location":"#start-a-server-on-a-thread","title":"Start a server on a thread","text":"<p>It is possible to start a server on a thread and use it as a connect to it as you would a real redis server.</p> <pre><code>from threading import Thread\nfrom fakeredis import TcpFakeServer\n\nserver_address = (\"127.0.0.1\", 6379)\nserver = TcpFakeServer(server_address, server_type=\"redis\")\nt = Thread(target=server.serve_forever, daemon=True)\nt.start()\n\nimport redis\n\nr = redis.Redis(host=server_address[0], port=server_address[1])\nr.set(\"foo\", \"bar\")\nassert r.get(\"foo\") == b\"bar\"\n</code></pre>"},{"location":"#use-as-a-pytest-fixture","title":"Use as a pytest fixture","text":"<pre><code>import pytest\n\n\n@pytest.fixture\ndef redis_client(request):\n    import fakeredis\n    redis_client = fakeredis.FakeRedis()\n    return redis_client\n</code></pre>"},{"location":"#general-usage","title":"General usage","text":"<p>FakeRedis can imitate Redis server version 6.x or 7.x, Valkey server, and dragonfly server. Redis version 7 is used by default.</p> <p>The intent is for fakeredis to act as though you're talking to a real redis server. It does this by storing the state internally. For example:</p> <pre><code>&gt;&gt;&gt; import fakeredis\n&gt;&gt;&gt; r = fakeredis.FakeStrictRedis(server_type=\"redis\")\n&gt;&gt;&gt; r.set('foo', 'bar')\nTrue\n&gt;&gt;&gt; r.get('foo')\n'bar'\n&gt;&gt;&gt; r.lpush('bar', 1)\n1\n&gt;&gt;&gt; r.lpush('bar', 2)\n2\n&gt;&gt;&gt; r.lrange('bar', 0, -1)\n[2, 1]\n</code></pre> <p>The state is stored in an instance of <code>FakeServer</code>. If one is not provided at construction, a new instance is automatically created for you, but you can explicitly create one to share state:</p> <pre><code>&gt;&gt;&gt; import fakeredis\n&gt;&gt;&gt; server = fakeredis.FakeServer()\n&gt;&gt;&gt; r1 = fakeredis.FakeStrictRedis(server=server)\n&gt;&gt;&gt; r1.set('foo', 'bar')\nTrue\n&gt;&gt;&gt; r2 = fakeredis.FakeStrictRedis(server=server)\n&gt;&gt;&gt; r2.get('foo')\n'bar'\n&gt;&gt;&gt; r2.set('bar', 'baz')\nTrue\n&gt;&gt;&gt; r1.get('bar')\n'baz'\n&gt;&gt;&gt; r2.get('bar')\n'baz'\n</code></pre> <p>It is also possible to mock connection errors, so you can effectively test your error handling. Set the connected attribute of the server to <code>False</code> after initialization.</p> <pre><code>&gt;&gt;&gt; import fakeredis\n&gt;&gt;&gt; server = fakeredis.FakeServer()\n&gt;&gt;&gt; server.connected = False\n&gt;&gt;&gt; r = fakeredis.FakeStrictRedis(server=server)\n&gt;&gt;&gt; r.set('foo', 'bar')\nConnectionError: FakeRedis is emulating a connection error.\n&gt;&gt;&gt; server.connected = True\n&gt;&gt;&gt; r.set('foo', 'bar')\nTrue\n</code></pre> <p>Fakeredis implements the same interface as <code>redis-py</code>, the popular redis client for python, and models the responses of redis 6.x or 7.x.</p>"},{"location":"#async-redis","title":"async Redis","text":"<p>Async redis client is supported. Instead of using <code>fakeredis.FakeRedis</code>, use <code>fakeredis.aioredis.FakeRedis</code>.</p> <pre><code>&gt;&gt;&gt; from fakeredis import FakeAsyncRedis\n&gt;&gt;&gt; r1 = FakeAsyncRedis()\n&gt;&gt;&gt; await r1.set('foo', 'bar')\nTrue\n&gt;&gt;&gt; await r1.get('foo')\n'bar'\n</code></pre>"},{"location":"#use-to-test-django-cache","title":"Use to test django cache","text":"<p>Update your cache settings:</p> <pre><code>from fakeredis import FakeConnection\n\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': '...',\n        'OPTIONS': {\n            'connection_class': FakeConnection\n        }\n    }\n}\n</code></pre> <p>For django-redis library, use the following <code>OPTIONS</code>:</p> <pre><code>'OPTIONS': {\n    'CONNECTION_POOL_KWARGS': {'connection_class': FakeConnection},\n}\n</code></pre> <p>You can use django <code>@override_settings</code> decorator</p>"},{"location":"#use-to-test-django-rq","title":"Use to test django-rq","text":"<p>There is a need to override <code>django_rq.queues.get_redis_connection</code> with a method returning the same connection.</p> <pre><code>import django_rq\n\n\n# RQ\n# Configuration to pretend there is a Redis service available.\n# Set up the connection before RQ Django reads the settings.\n# The connection must be the same because in fakeredis connections\n# do not share the state. Therefore, we define a singleton object to reuse it.\ndef get_fake_connection(config: Dict[str, Any], strict: bool):\n    from fakeredis import FakeRedis, FakeStrictRedis\n    redis_cls = FakeStrictRedis if strict else FakeRedis\n    if \"URL\" in config:\n        return redis_cls.from_url(\n            config[\"URL\"],\n            db=config.get(\"DB\"),\n        )\n    return redis_cls(\n        host=config[\"HOST\"],\n        port=config[\"PORT\"],\n        db=config.get(\"DB\", 0),\n        username=config.get(\"USERNAME\", None),\n        password=config.get(\"PASSWORD\"),\n    )\n\n\ndjango_rq.queues.get_redis_connection = get_fake_connection\n</code></pre>"},{"location":"#use-to-test-fastapi","title":"Use to test FastAPI","text":"<p>See info on this issue</p> <p>If you're using FastAPI dependency injection to provide a Redis connection, then you can override that dependency for testing.</p> <p>Your FastAPI application main.py:</p> <pre><code>from typing import Annotated, Any, AsyncIterator\n\nfrom redis import asyncio as redis\nfrom fastapi import Depends, FastAPI\n\napp = FastAPI()\n\n\nasync def get_redis() -&gt; AsyncIterator[redis.Redis]:\n    # Code to handle creating a redis connection goes here, for example\n    async with redis.from_url(\"redis://localhost:6379\") as client:  # type: ignore[no-untyped-call]\n        yield client\n\n\n@app.get(\"/\")\nasync def root(redis_client: Annotated[redis.Redis, Depends(get_redis)]) -&gt; Any:\n    # Code that does something with redis goes here, for example:\n    await redis_client.set(\"foo\", \"bar\")\n    return {\"redis_keys\": await redis_client.keys()}\n</code></pre> <p>Assuming you use pytest-asyncio, your test file (or you can put the fixtures in conftest.py as usual):</p> <pre><code>from typing import AsyncIterator\nfrom unittest import mock\n\nimport fakeredis\nimport httpx\nimport pytest\nimport pytest_asyncio\nfrom redis import asyncio as redis\n\nfrom main import app, get_redis\n\n\n@pytest_asyncio.fixture\nasync def redis_client() -&gt; AsyncIterator[redis.Redis]:\n    async with fakeredis.FakeAsyncRedis() as client:\n        yield client\n\n\n@pytest_asyncio.fixture\nasync def app_client(redis_client: redis.Redis) -&gt; AsyncIterator[httpx.AsyncClient]:\n    async def get_redis_override() -&gt; redis.Redis:\n        return redis_client\n\n    transport = httpx.ASGITransport(app=app)  # type: ignore[arg-type] # https://github.com/encode/httpx/issues/3111\n    async with httpx.AsyncClient(transport=transport, base_url=\"http://test\") as app_client:\n        with mock.patch.dict(app.dependency_overrides, {get_redis: get_redis_override}):\n            yield app_client\n\n\n@pytest.mark.asyncio\nasync def test_app(app_client: httpx.AsyncClient) -&gt; None:\n    response = await app_client.get(\"/\")\n    assert response.json()[\"redis_keys\"] == [\"foo\"]\n</code></pre>"},{"location":"#known-limitations","title":"Known Limitations","text":"<p>Apart from unimplemented commands, there are a number of cases where fakeredis won't give identical results to real redis. The following are differences that are unlikely to ever be fixed; there are also differences that are fixable (such as commands that do not support all features) which should be filed as bugs in GitHub.</p> <ul> <li> <p>Hyperloglogs are implemented using sets underneath. This means that the <code>type</code> command will return the wrong answer,   you can't use <code>get</code> to retrieve the encoded value, and counts will be slightly different (they will in fact be exact).</p> </li> <li> <p>When a command has multiple error conditions, such as operating on a key of the wrong type and an integer argument is   not well-formed, the choice of error to return may not match redis.</p> </li> <li> <p>The <code>incrbyfloat</code> and <code>hincrbyfloat</code> commands in redis use the C <code>long double</code> type, which typically has more   precision than Python's <code>float</code> type.</p> </li> <li> <p>Redis makes guarantees about the order in which clients blocked on blocking commands are woken up. Fakeredis does not   honor these guarantees.</p> </li> <li> <p>Where redis contains bugs, fakeredis generally does not try to provide exact bug compatibility. It's not practical for   fakeredis to try to match the set of bugs in your specific version of redis.</p> </li> <li> <p>There are a number of cases where the behavior of redis is undefined, such as the order of elements returned by set   and hash commands. Fakeredis will generally not produce the same results, and in Python versions before 3.6 may   produce different results each time the process is re-run.</p> </li> <li> <p>SCAN/ZSCAN/HSCAN/SSCAN will not necessarily iterate all items if items are deleted or renamed during iteration. They   also won't necessarily iterate in the same chunk sizes or the same order as redis. This is aligned with redis behavior   as can be seen in tests <code>test_scan_delete_key_while_scanning_should_not_returns_it_in_scan</code>.</p> </li> <li> <p>DUMP/RESTORE will not return or expect data in the RDB format. Instead, the <code>pickle</code> module is used to mimic an opaque   and non-standard format. WARNING: Do not use RESTORE with untrusted data, as a malicious pickle can execute   arbitrary code.</p> </li> </ul>"},{"location":"#local-development-environment","title":"Local development environment","text":"<p>To ensure parity with the real redis, there are a set of integration tests that mirror the unittests. For every unittest that is written, the same test is run against a real redis instance using a real redis-py client instance. To run these tests, you must have a redis server running on localhost, port 6379 (the default settings). WARNING: the tests will completely wipe your database!</p> <p>First install poetry if you don't have it, and then install all the dependencies:</p> <pre><code>pip install poetry\npoetry install\n</code></pre> <p>To run all the tests:</p> <pre><code>poetry run pytest -v\n</code></pre> <p>If you only want to run tests against fake redis, without a real redis::</p> <pre><code>poetry run pytest -m fake\n</code></pre> <p>Because this module is attempting to provide the same interface as <code>redis-py</code>, the python bindings to redis, a reasonable way to test this to take each unittest and run it against a real redis server. Fakeredis and the real redis server should give the same result. To run tests against a real redis instance instead:</p> <pre><code>poetry run pytest -m real\n</code></pre> <p>If redis is not running, and you try to run tests against a real redis server, these tests will have a result of 's' for skipped.</p> <p>There are some tests that test redis blocking operations that are somewhat slow. If you want to skip these tests during day-to-day development, they have all been tagged as 'slow' so you can skip them by running:</p> <pre><code>poetry run pytest -m \"not slow\"\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome. You can contribute in many ways:</p> <ul> <li>Report bugs you found.</li> <li>Check out issues with <code>Help wanted</code> label.</li> <li>Implement commands which are not yet implemented. Follow   the guide how to implement a new command.</li> <li>Write additional test cases. Follow the guide how to write a test-case.</li> </ul> <p>Please follow coding standards listed in the contributing guide.</p>"},{"location":"#sponsor","title":"Sponsor","text":"<p>fakeredis-py is developed for free.</p> <p>You can support this project by becoming a sponsor using this link.</p>"},{"location":"dragonfly-support/","title":"Support for Dragonfly","text":"<p>Dragonfly DB is a drop-in Redis replacement that cuts costs and boosts performance. Designed to fully utilize the power of modern cloud hardware and deliver on the data demands of modern applications, Dragonfly frees developers from the limits of traditional in-memory data stores.</p> <p>FakeRedis can be used as a Dragonfly replacement for testing and development purposes as well.</p> <p>Since Dragonfly does not have its own unique clients, you can use the <code>Fakeredis</code> client to connect to a Dragonfly.</p> <pre><code>from fakeredis import FakeRedis\n\nclient = FakeRedis(server_type=\"dragonfly\")\nclient.set(\"key\", \"value\")\nprint(client.get(\"key\"))\n</code></pre> <p>Alternatively, you can start a thread with a Fake Valkey server.</p> <pre><code>from threading import Thread\nfrom fakeredis import TcpFakeServer\n\nserver_address = (\"127.0.0.1\", 6379)\nserver = TcpFakeServer(server_address, server_type=\"dragonfly\")\nt = Thread(target=server.serve_forever, daemon=True)\nt.start()\n\nimport redis\n\nr = redis.Redis(host=server_address[0], port=server_address[1])\nr.set(\"foo\", \"bar\")\nassert r.get(\"foo\") == b\"bar\"\n</code></pre> <p>To call Dragonfly specific commands, which are not implemented in the redis-py client, you can use the <code>execute_command</code>, like in this example calling the <code>SADDEX</code> command:</p> <pre><code>from fakeredis import FakeRedis\n\nclient = FakeRedis(server_type=\"dragonfly\")\nclient.sadd(\"key\", \"value\")\n# The SADDEX command is not implemented in redis-py\nclient.execute_command(\"SADDEX\", 10, \"key\", \"value\")\n</code></pre>"},{"location":"redis-stack/","title":"Support for redis-stack","text":"<p>To install all supported modules, you can install fakeredis with <code>pip install fakeredis[lua,json,bf]</code>.</p>"},{"location":"redis-stack/#redisjson-support","title":"RedisJson support","text":"<p>The JSON capability of Redis Stack provides JavaScript Object Notation (JSON) support for Redis. It lets you store, update, and retrieve JSON values in a Redis database, similar to any other Redis data type. Redis JSON also works seamlessly with Search and Query to let you index and query JSON documents.</p> <p>JSONPath's syntax: The following JSONPath syntax table was adapted from Goessner's path syntax comparison.</p> <p>Currently, Redis Json module is fully implemented (see supported commands). Support for JSON commands (e.g., <code>JSON.GET</code>) is implemented using jsonpath-ng, you can install it using <code>pip install 'fakeredis[json]'</code>.</p> <pre><code>&gt;&gt;&gt; import fakeredis\n&gt;&gt;&gt; from redis.commands.json.path import Path\n&gt;&gt;&gt; r = fakeredis.FakeStrictRedis()\n&gt;&gt;&gt; assert r.json().set(\"foo\", Path.root_path(), {\"x\": \"bar\"}, ) == 1\n&gt;&gt;&gt; r.json().get(\"foo\")\n{'x': 'bar'}\n&gt;&gt;&gt; r.json().get(\"foo\", Path(\"x\"))\n'bar'\n</code></pre>"},{"location":"redis-stack/#bloom-filter-support","title":"Bloom filter support","text":"<p>Bloom filters are a probabilistic data structure that checks for the presence of an element in a set.</p> <p>Instead of storing all the elements in the set, Bloom Filters store only the elements' hashed representation, thus sacrificing some precision. The trade-off is that Bloom Filters are very space-efficient and fast.</p> <p>You can get a false positive result, but never a false negative, i.e., if the bloom filter says that an element is not in the set, then it is definitely not in the set. If the bloom filter says that an element is in the set, then it is most likely in the set, but it is not guaranteed.</p> <p>Currently, RedisBloom module bloom filter commands are fully implemented using pybloom-live( see supported commands).</p> <p>You can install it using <code>pip install 'fakeredis[probabilistic]'</code>.</p> <pre><code>&gt;&gt;&gt; import fakeredis\n&gt;&gt;&gt; r = fakeredis.FakeStrictRedis()\n&gt;&gt;&gt; r.bf().madd('key', 'v1', 'v2', 'v3') == [1, 1, 1]\n&gt;&gt;&gt; r.bf().exists('key', 'v1')\n1\n&gt;&gt;&gt; r.bf().exists('key', 'v5')\n0\n</code></pre>"},{"location":"redis-stack/#count-min-sketch-support","title":"Count-Min Sketch support","text":"<p>Count-min sketch is a probabilistic data structure that estimates the frequency of an element in a data stream.</p> <p>You can install it using <code>pip install 'fakeredis[probabilistic]'</code>.</p> <pre><code>&gt;&gt;&gt; import fakeredis\n&gt;&gt;&gt; r = fakeredis.FakeStrictRedis()\n&gt;&gt;&gt; r.cms().initbydim(\"cmsDim\", 100, 5)\nOK\n&gt;&gt;&gt; r.cms().incrby(\"cmsDim\", [\"foo\"], [3])\n[3]\n</code></pre>"},{"location":"redis-stack/#cuckoo-filter-support","title":"Cuckoo filter support","text":"<p>Cuckoo filters are a probabilistic data structure that checks for the presence of an element in a set</p> <p>You can install it using <code>pip install 'fakeredis[probabilistic]'</code>.</p>"},{"location":"redis-stack/#redis-programmability","title":"Redis programmability","text":"<p>Redis provides a programming interface that lets you execute custom scripts on the server itself. In Redis 7 and beyond, you can use Redis Functions to manage and run your scripts. In Redis 6.2 and below, you use Lua scripting with the EVAL command to program the server.</p> <p>If you wish to have Lua scripting support (this includes features like <code>redis.lock.Lock</code>, which are implemented in Lua), you will need lupa, you can install it using <code>pip install 'fakeredis[lua]'</code></p> <p>By default, FakeRedis works with LUA version 5.1, to use a different version supported by lupa, set the <code>FAKEREDIS_LUA_VERSION</code> environment variable to the desired version (e.g., <code>5.4</code>).</p>"},{"location":"redis-stack/#lua-binary-modules","title":"LUA binary modules","text":"<p>fakeredis supports using LUA binary modules as well. In order to have your FakeRedis instance load a LUA binary module, you can use the <code>lua_modules</code> parameter.</p> <pre><code>&gt;&gt;&gt; import fakeredis\n&gt;&gt;&gt; r = fakeredis.FakeStrictRedis(lua_modules={\"my_module.so\"})\n</code></pre> <p>The module <code>.so</code>/<code>.dll</code> file should be in the working directory.</p> <p>To install LUA modules, you can use luarocks to install the module and then copy the <code>.so</code>/<code>.dll</code> file to the working directory.</p> <p>For example, to install <code>lua-cjson</code>:</p> <pre><code>luarocks install lua-cjson\ncp /opt/homebrew/lib/lua/5.4/cjson.so `pwd`\n</code></pre>"},{"location":"valkey-support/","title":"Support for valkey","text":"<p>Valkey is an open source (BSD) high-performance key/value datastore that supports a variety of workloads such as caching, message queues, and can act as a primary database. The project was forked from the open source Redis project right before the transition to their new source available licenses.</p> <p>FakeRedis can be used as a valkey replacement for testing and development purposes as well.</p> <p>To make the process more straightforward, the <code>FakeValkey</code> class sets all relevant arguments in <code>FakeRedis</code> to the valkey values.</p> <pre><code>from fakeredis import FakeValkey\n\nvalkey = FakeValkey()\nvalkey.set(\"key\", \"value\")\nprint(valkey.get(\"key\"))\n</code></pre> <p>Alternatively, you can start a thread with a Fake Valkey server.</p> <pre><code>from threading import Thread\nfrom fakeredis import TcpFakeServer\n\nserver_address = (\"127.0.0.1\", 6379)\nserver = TcpFakeServer(server_address, server_type=\"valkey\")\nt = Thread(target=server.serve_forever, daemon=True)\nt.start()\n\nimport valkey\n\nr = valkey.Valkey(host=server_address[0], port=server_address[1])\nr.set(\"foo\", \"bar\")\nassert r.get(\"foo\") == b\"bar\"\n</code></pre>"},{"location":"about/changelog/","title":"Change log","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2290-2025-05-01","title":"v2.29.0 - 2025-05-01","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement support for <code>NOVALUES</code> for <code>HSCAN</code></li> <li>Implement support for <code>CLIENT LIST</code> #376</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix <code>json.set</code> nx arg behavior #372</li> <li>Fix issue with <code>hset</code> not resetting expiration over field</li> <li>Fix inconsistent 'pending' field in return from XINFO GROUPS #374</li> <li>Fix <code>TDIGEST.QUANTILE</code> to match redis behavior on a TDigest with one value #377</li> <li>Fix <code>HINCRBY</code>/<code>hincrbyfloat</code> commands now don't remove ttl from hash key @M1ha-Shvn #381</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Running redis-stack tests on redis8 #382</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2281-2025-04-02","title":"v2.28.1 - 2025-04-02","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_1","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Open commands.json with encoding specified #367</li> <li>Fix <code>xadd</code> to use last timestamp if the current system timestamp is lower than the last timestamp #368</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2280-2025-03-29","title":"v2.28.0 - 2025-03-29","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_1","title":"\ud83d\ude80 Features","text":"<ul> <li>implement support for <code>WITHSCORE</code> in <code>ZRANK</code> and <code>ZREVRANK</code> #357</li> <li>implement support for Connection commands <code>HELLO</code>, <code>CLIENT SETNAME</code>, <code>CLIENT GETNAME</code>, <code>CLIENT ID</code>, <code>CLIENT INFO</code> #361</li> <li>implement support for <code>HGETEX</code>, <code>HSETEX</code>, <code>HGETDEL</code> #365</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_2","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix <code>test_tcp_server_started</code> to close the connection @mgorny (#363)</li> <li>[ACL] Always allow <code>AUTH</code> command @wakonig (#362)</li> <li>[ACL] Provide <code>default</code> account acl on startup @wakonig (#362)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_1","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Refactor hypothesis tests (#366)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2270-2025-02-11","title":"v2.27.0 - 2025-02-11","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_2","title":"\ud83d\ude80 Features","text":"<ul> <li>ACL commands support #338<ul> <li><code>ACL LOAD</code>, <code>ACL SAVE</code>, <code>ACL LIST</code>, <code>ACL USERS</code>, <code>ACL GETUSER</code>, <code>ACL SETUSER</code>, <code>ACL DELUSER</code>, <code>ACL CAT</code>,   <code>ACL LOG</code>, <code>ACL HELP</code>, <code>ACL WHOAMI</code>, <code>ACL GENPASS</code>, <code>ACL AUTH</code>, <code>ACL LOG_RESET</code>, <code>ACL LOG_COUNT</code>, <code>ACL LOG_GET</code>,   <code>ACL LOG_HELP</code>, <code>ACL LOG_RESET</code>, <code>ACL LOG_COUNT</code>, <code>ACL LOG_GET</code>, <code>ACL LOG_HELP</code></li> </ul> </li> <li>Add support disable_decoding in async read_response #349</li> <li>Implement support for <code>SADDEX</code>, using a new set implementation with support for expiring members #350</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_2","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Remove end of life python 3.8 from test matrix</li> <li>Add python 3.13 to test matrix</li> <li>Improve documentation for Dragonfly/Valkey support</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2262-2024-12-15","title":"v2.26.2 - 2024-12-15","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_3","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix bug in <code>xreadgroup</code> when stream length is less than COUNT with BLOCK #344</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_3","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Implement test for <code>SADDEX</code> (Dragonfly specific command) #348</li> <li>Update dependencies</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2261-2024-10-26","title":"v2.26.1 - 2024-10-26","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_4","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Minor fix: using typing_extensions instead of typing for python 3.7 support #341/#343</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2260-2024-10-24","title":"v2.26.0 - 2024-10-24","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_3","title":"\ud83d\ude80 Features","text":"<ul> <li>Support for server-type specific commands #340</li> <li>Support for Dragonfly <code>SADDEX</code> command #340</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_5","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix bug in bitpos function for the clear bit mode @Diskein #337</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2251-2024-09-30","title":"v2.25.1 - 2024-09-30","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_6","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix missing default values for version/server_type in <code>FakeBaseConnectionMixin</code> #334</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2250-2024-09-28","title":"v2.25.0 - 2024-09-28","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_4","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement support for hash expiration related commands @j00bar #328<ul> <li><code>HEXPIRE</code>, <code>HEXPIREAT</code>, <code>HEXPIRETIME</code>, <code>HPERSIST</code>, <code>HPEXPIRE</code>, <code>HPEXPIREAT</code>, <code>HPEXPIRETIME</code>, <code>HPTTL</code>, <code>HTTL</code>,</li> </ul> </li> <li>Implement support for <code>SORT_RO</code> #325, <code>EXPIRETIME</code> #323, and <code>PEXPIRETIME</code> #324</li> <li>Support for creating a tcp server listening to multiple clients</li> <li>Testing against valkey 8.0 #333</li> <li>Improve documentation #332</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_7","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Replace <code>typing_extensions</code> dependency with <code>typing-extensions</code> #330</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2241-2024-08-26","title":"v2.24.1 - 2024-08-26","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_8","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix license file added to site-packages #320</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2240-2024-08-24","title":"v2.24.0 - 2024-08-24","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_5","title":"\ud83d\ude80 Features","text":"<ul> <li>Support for TIME SERIES commands (no support for align arguments on some commands) #310</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_9","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>fix:xrevrange to work with exclusive ranges @hurlenko #319</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_4","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Update all dependencies, particularly pytest to v8</li> <li>Add tests against Dragonfly server #318</li> <li>Implement decocator <code>unsupported_server_types</code> to enable excluding tests from running against certain server types   #318</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2235-2024-08-03","title":"v2.23.5 - 2024-08-03","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_10","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>fix:issue with async connection and blocking operations writing responses twice to socket #316</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2234-2024-08-26","title":"v2.23.4- 2024-08-26","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_11","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>fix:move random seed to HeavyKeeper to avoid issues #315</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_5","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Documented how to use fakeredis with FastAPI. @ sjjessop #292</li> <li>Using black for linting python code.</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2233-2024-06-29","title":"v2.23.3- 2024-06-29","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_6","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>docs: Full code for FastAPI integration (#312)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_12","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix ttl for empty stream #313</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2232-2024-05-18","title":"v2.23.2- 2024-05-18","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_13","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix reading multiple streams with blocking #309</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2231-2024-05-12","title":"v2.23.1- 2024-05-12","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_14","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix <code>XREAD</code> behavior when <code>COUNT</code> is not provided but <code>BLOCKING</code> is provided #308</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2230-2024-05-07","title":"v2.23.0 - 2024-05-07","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_6","title":"\ud83d\ude80 Features","text":"<ul> <li>Support for TDigest   commands: <code>TDIGEST.ADD</code>,<code>TDIGEST.BYRANK</code>,<code>TDIGEST.BYREVRANK</code>,<code>TDIGEST.CDF</code>, <code>TDIGEST.CREATE</code>, <code>TDIGEST.INFO</code>,   <code>TDIGEST.MAX</code>, <code>TDIGEST.MERGE</code>, <code>TDIGEST.MIN</code>, <code>TDIGEST.QUANTILE</code>, <code>TDIGEST.RANK</code>, <code>TDIGEST.RESET</code>, <code>TDIGEST.REVRANK</code>,   <code>TDIGEST.TRIMMED_MEAN</code>.</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_15","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Import <code>Self</code> from typing vs. typing_extension</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_7","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Update dependencies</li> <li>Add redis-py 5.0.4 to tests</li> <li>Update lupa version constraint #306 @noamkush</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2220-2024-04-19","title":"v2.22.0 - 2024-04-19","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_7","title":"\ud83d\ude80 Features","text":"<ul> <li>Support for setting LUA version from environment variable  <code>FAKEREDIS_LUA_VERSION</code> #287</li> <li>Support for loading LUA binary modules in fakeredis #304</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_16","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix the type hint for the version parameter in the async client #302</li> <li>Using LUA 5.1 like real redis #287</li> <li>fix: FakeRedisMixin.from_url() return type is really Self. @ben-xo #305</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2213-2024-03-12","title":"v2.21.3 - 2024-03-12","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_17","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Revert behavior of defaulting to share the same server data structure between connections @howamith #303</li> <li>Fix type hint for version #302</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2212-2024-03-12","title":"v2.21.2 - 2024-03-12","text":"<p>Note: Since connection params are defaulted to be the same between async and sync connections, different FakeRedis connections with the same connection params (or without connection parameters) will share the same server data structure.</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_18","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Connection params are defaulted to be the same between async and sync connections #297</li> <li><code>xinfo_stream</code> raises exception when stream does not exist #296</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2211-2024-02-15","title":"v2.21.1 - 2024-02-15","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_19","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Support for float timeout values #289</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_8","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Fix django cache documentation #286</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2210-2024-01-30","title":"v2.21.0 - 2024-01-30","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_8","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement all TOP-K commands (<code>TOPK.INFO</code>, <code>TOPK.LIST</code>, <code>TOPK.RESERVE</code>,   <code>TOPK.ADD</code>, <code>TOPK.COUNT</code>, <code>TOPK.QUERY</code>, <code>TOPK.INCRBY</code>) #278</li> <li>Implement all cuckoo filter commands #276</li> <li>Implement all Count-Min Sketch commands #277</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_20","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix XREAD blocking bug #274 #275</li> <li>EXAT option does not work #279</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_9","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Support for redis-py 5.1.0b3</li> <li>Improve <code>@testtools.run_test_if_redispy_ver</code></li> <li>Refactor bloom filter commands implementation to use pyprobables instead of   pybloom_live</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2201-2023-12-13","title":"v2.20.1 - 2023-12-13","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_21","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix <code>XREAD</code> bug #256</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_10","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Testing for python 3.12</li> <li>Dependencies update</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2200-2023-10-21","title":"v2.20.0 - 2023-10-21","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_9","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>BITFIELD</code> command #247</li> <li>Implement <code>COMMAND</code>, <code>COMMAND INFO</code>, <code>COMMAND COUNT</code> #248</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2190","title":"v2.19.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_10","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement Bloom filters commands #239</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_22","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix error on blocking XREADGROUP #237</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2181","title":"v2.18.1","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_23","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix stream type issue #233</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_11","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Add mypy hints to everything</li> <li>Officially for redis-py 5.0.0, redis 7.2</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2180","title":"v2.18.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_11","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>PUBSUB NUMPAT</code> #195, <code>SSUBSCRIBE</code> #199, <code>SPUBLISH</code> #198,   <code>SUNSUBSCRIBE</code> #200, <code>PUBSUB SHARDCHANNELS</code> #196, <code>PUBSUB SHARDNUMSUB</code> #197</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_24","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix All aio.FakeRedis instances share the same server #218</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2170","title":"v2.17.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_12","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>LPOS</code> #207, <code>LMPOP</code> #184, and <code>BLMPOP</code> #183</li> <li>Implement <code>ZMPOP</code> #191, <code>BZMPOP</code> #186</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_25","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix incorrect error msg for the group not found #210</li> <li>fix: use the same server_key within the pipeline when issued watch #213</li> <li>issue with ZRANGE and ZRANGESTORE with BYLEX #214</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#contributors","title":"Contributors","text":"<p>We'd like to thank all the contributors who worked on this release!</p> <p>@OlegZv, @sjjessop</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2160","title":"v2.16.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_13","title":"\ud83d\ude80 Features","text":"<ul> <li>Implemented support for <code>JSON.MSET</code> #174, <code>JSON.MERGE</code> #181</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_26","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Add support for <code>version</code> for async FakeRedis #205</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_12","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Updated how to test django_rq #204</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2150","title":"v2.15.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_14","title":"\ud83d\ude80 Features","text":"<ul> <li>Implemented support for various stream groups commands:<ul> <li><code>XGROUP CREATE</code> #161, <code>XGROUP DESTROY</code> #164, <code>XGROUP SETID</code> #165, <code>XGROUP DELCONSUMER</code> #162,   <code>XGROUP CREATECONSUMER</code> #163, <code>XINFO GROUPS</code> #168, <code>XINFO CONSUMERS</code> #168, <code>XINFO STREAM</code> #169, <code>XREADGROUP</code> #171,   <code>XACK</code> #157, <code>XPENDING</code> #170, <code>XCLAIM</code> #159, <code>XAUTOCLAIM</code> #158</li> </ul> </li> <li>Implemented sorted set commands:<ul> <li><code>ZRANDMEMBER</code> #192, <code>ZDIFF</code> #187, <code>ZINTER</code> #189, <code>ZUNION</code> #194, <code>ZDIFFSTORE</code> #188,   <code>ZINTERCARD</code> #190, <code>ZRANGESTORE</code> #193</li> </ul> </li> <li>Implemented list commands:<ul> <li><code>BLMOVE</code> #182,</li> </ul> </li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_13","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Improved documentation.</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2142","title":"v2.14.2","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_27","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix documentation link</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2141","title":"v2.14.1","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_28","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix requirement for packaging.Version #177</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2140","title":"v2.14.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_15","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>HRANDFIELD</code> #156</li> <li>Implement <code>JSON.MSET</code></li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_14","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Improve streams code</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2130","title":"v2.13.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_29","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fixed xadd timestamp (fixes #151) (#152)</li> <li>Implement XDEL #153</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_15","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Improve test code</li> <li>Fix reported security issue</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2121","title":"v2.12.1","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_30","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Add support for <code>Connection.read_response</code> arguments used in redis-py 4.5.5 and 5.0.0</li> <li>Adding state for scan commands (#99)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_16","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Improved documentation (added async sample, etc.)</li> <li>Add redis-py 5.0.0b3 to GitHub workflow</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2120","title":"v2.12.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_16","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>XREAD</code> #147</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2112","title":"v2.11.2","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_31","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Unique FakeServer when no connection params are provided (#142)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2111","title":"v2.11.1","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_17","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Minor fixes supporting multiple connections</li> <li>Update documentation</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2110","title":"v2.11.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_17","title":"\ud83d\ude80 Features","text":"<ul> <li>connection parameters awareness:   Creating multiple clients with the same connection parameters will result in   the same server data structure.</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_32","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix creating fakeredis.aioredis using url with user/password (#139)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2103","title":"v2.10.3","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_18","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Support for redis-py 5.0.0b1</li> <li>Include tests in sdist (#133)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_33","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix import used in GenericCommandsMixin.randomkey (#135)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2102","title":"v2.10.2","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_34","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix async_timeout usage on py3.11 (#132)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2101","title":"v2.10.1","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_35","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Enable testing django-cache using <code>FakeConnection</code>.</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v2100","title":"v2.10.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_18","title":"\ud83d\ude80 Features","text":"<ul> <li>All geo commands implemented</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v292","title":"v2.9.2","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_36","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix bug for <code>xrange</code></li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v291","title":"v2.9.1","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_37","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix bug for <code>xrevrange</code></li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v290","title":"v2.9.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_19","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>XTRIM</code></li> <li>Add support for <code>MAXLEN</code>, <code>MAXID</code>, <code>LIMIT</code> arguments for <code>XADD</code> command</li> <li>Add support for <code>ZRANGE</code> arguments for <code>ZRANGE</code> command #127</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_19","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Relax python version requirement #128</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v280","title":"v2.8.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_20","title":"\ud83d\ude80 Features","text":"<ul> <li>Support for redis-py 4.5.0 #125</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_38","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix import error for redis-py v3+ #121</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v271","title":"v2.7.1","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_39","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix import error for NoneType #527</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v270","title":"v2.7.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_21","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>JSON.ARRINDEX</code>, <code>JSON.OBJLEN</code>, <code>JSON.OBJKEYS</code> ,   <code>JSON.ARRPOP</code>, <code>JSON.ARRTRIM</code>, <code>JSON.NUMINCRBY</code>, <code>JSON.NUMMULTBY</code>,   <code>XADD</code>, <code>XLEN</code>, <code>XRANGE</code>, <code>XREVRANGE</code></li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_20","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Improve json commands implementation.</li> <li>Improve commands documentation.</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v260","title":"v2.6.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_22","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>JSON.TYPE</code>, <code>JSON.ARRLEN</code> and <code>JSON.ARRAPPEND</code></li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_40","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix encoding of None (#118)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_21","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Start skeleton for streams commands in <code>streams_mixin.py</code> and <code>test_streams_commands.py</code></li> <li>Start migrating documentation to https://fakeredis.readthedocs.io/</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.5.0...v2.6.0</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v250","title":"v2.5.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_23","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement support for <code>BITPOS</code> (bitmap command) (#112)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_41","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix json mget when dict is returned (#114)</li> <li>fix: proper export (#116)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_22","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Extract param handling (#113)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#contributors_1","title":"Contributors","text":"<p>We'd like to thank all the contributors who worked on this release!</p> <p>@Meemaw, @Pichlerdom</p> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.4.0...v2.5.0</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v240","title":"v2.4.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_24","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>LCS</code> (#111), <code>BITOP</code> (#110)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_42","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Fix a bug the checking type in scan_iter (#109)</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.3.0...v2.4.0</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v230","title":"v2.3.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_25","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>GETEX</code> (#102)</li> <li>Implement support for <code>JSON.STRAPPEND</code> (json command) (#98)</li> <li>Implement <code>JSON.STRLEN</code>, <code>JSON.TOGGLE</code> and fix bugs with <code>JSON.DEL</code> (#96)</li> <li>Implement <code>PUBSUB CHANNELS</code>, <code>PUBSUB NUMSUB</code></li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_43","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>ZADD with XX \\&amp; GT allows updates with lower scores (#105)</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.2.0...v2.3.0</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v220","title":"v2.2.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_26","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement <code>JSON.CLEAR</code> (#87)</li> <li>Support for redis-py v4.4.0</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_23","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Implement script to create issues for missing commands</li> <li>Remove checking for deprecated redis-py versions in tests</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.1.0...v2.2.0</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v210","title":"v2.1.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_27","title":"\ud83d\ude80 Features","text":"<ul> <li>Implement json.mget (#85)</li> <li>Initial json module support - <code>JSON.GET</code>, <code>JSON.SET</code> and <code>JSON.DEL</code> (#80)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#bug-fixes_44","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>fix: add nowait for asyncio disconnect (#76)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_24","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Refactor how commands are registered (#79)</li> <li>Refactor tests from redispy4_plus (#77)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#contributors_2","title":"Contributors","text":"<p>We'd like to thank all the contributors who worked on this release!</p> <p>@hyeongguen-song, @the-wondersmith</p> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v2.0.0...v2.1.0</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v200","title":"v2.0.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#breaking-changes","title":"\ud83d\ude80 Breaking changes","text":"<ul> <li>Remove support for aioredis separate from redis-py (redis-py versions 4.1.2 and below). (#65)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#features_28","title":"\ud83d\ude80 Features","text":"<ul> <li>Add support for redis-py v4.4rc4 (#73)</li> <li>Add mypy support (#74)</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#maintenance_25","title":"\ud83e\uddf0 Maintenance","text":"<ul> <li>Separate commands to mixins (#71)</li> <li>Use release-drafter</li> <li>Update GitHub workflows</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.10.1...v2.0.0</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v1101","title":"v1.10.1","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed","title":"What's Changed","text":"<ul> <li>Implement support for <code>zmscore</code> by @the-wondersmith in #67</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#new-contributors","title":"New Contributors","text":"<ul> <li>@the-wondersmith made their first contribution in #67</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.10.0...v1.10.1</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v1100","title":"v1.10.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed_1","title":"What's Changed","text":"<ul> <li>implement <code>GETDEL</code> and <code>SINTERCARD</code> support in #57</li> <li>Test get float-type behavior in #59</li> <li>Implement <code>BZPOPMIN</code>/<code>BZPOPMAX</code> support in #60</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.9.4...v1.10.0</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v194","title":"v1.9.4","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed_2","title":"What's Changed","text":"<ul> <li>Separate LUA support to a different file in #55 Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.9.3...v1.9.4</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v193","title":"v1.9.3","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#changed","title":"Changed","text":"<ul> <li>Removed python-six dependency</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.9.2...v1.9.3</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v192","title":"v1.9.2","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed_3","title":"What's Changed","text":"<ul> <li>zadd support for GT/LT in #49</li> <li>Remove <code>six</code> dependency in #51</li> <li>Add host to <code>conn_pool_args</code>  in #51</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.9.1...v1.9.2</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v191","title":"v1.9.1","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed_4","title":"What's Changed","text":"<ul> <li>Zrange byscore in #44</li> <li>Expire options in #46</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.9.0...v1.9.1</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v190","title":"v1.9.0","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed_5","title":"What's Changed","text":"<ul> <li>Enable redis7 support in #42</li> </ul> <p>Full Changelog: https://github.com/cunla/fakeredis-py/compare/v1.8.2...v1.9.0</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v182","title":"v1.8.2","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed_6","title":"What's Changed","text":"<ul> <li>Update the <code>publish</code> GitHub action to create an issue on failure by @terencehonles   in #33</li> <li>Add <code>release draft</code> job in #37</li> <li>Fix input and output type of cursors for SCAN commands by @tohin   in #40</li> <li>Fix passing params in args\u2014Fix #36 in #41</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#new-contributors_1","title":"New Contributors","text":"<ul> <li>@tohin made their first contribution in #40</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/v1.8.1...v1.8.2</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v181","title":"v1.8.1","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed_7","title":"What's Changed","text":"<ul> <li>fix: allow redis 4.3.* by @terencehonles in #30</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#new-contributors_2","title":"New Contributors","text":"<ul> <li>@terencehonles made their first contribution in #30</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/v1.8...v1.8.1</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v18","title":"v1.8","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed_8","title":"What's Changed","text":"<ul> <li>Fix handling url with username and password in #27</li> <li>Refactor tests in #28</li> <li>23 - Re-add dependencies lost during switch to poetry by @xkortex   in #26</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/v1.7.6.1...v1.8</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v176","title":"v1.7.6","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#added","title":"Added","text":"<ul> <li>add <code>IMOVE</code> operation by @BGroever in #11</li> <li>Add <code>SMISMEMBER</code> command by @OlegZv in #20</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#removed","title":"Removed","text":"<ul> <li>Remove Python 3.7 by @nzw0301 in #8</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed_9","title":"What's Changed","text":"<ul> <li>fix: work with <code>redis.asyncio</code> by @zhongkechen in #10</li> <li>Migrate to poetry in #12</li> <li>Create annotation for redis4+ tests in #14</li> <li>Make aioredis and lupa optional dependencies in #16</li> <li>Remove aioredis requirement if redis-py 4.2+ by @ikornaselur   in #19</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#new-contributors_3","title":"New Contributors","text":"<ul> <li>@nzw0301 made their first contribution in #8</li> <li>@zhongkechen made their first contribution in #10</li> <li>@BGroever made their first contribution in #11</li> <li>@ikornaselur made their first contribution in #19</li> <li>@OlegZv made their first contribution in #20</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/v1.7.5...v1.7.6</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#thanks-to-our-sponsors-this-month","title":"Thanks to our sponsors this month","text":"<ul> <li>@beatgeek</li> </ul>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v175","title":"v1.7.5","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed_10","title":"What's Changed","text":"<ul> <li>Fix python3.8 redis4.2+ issue in #6</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/v1.7.4...v1.7.5</p>","tags":["changelog","release-notes"]},{"location":"about/changelog/#v174","title":"v1.7.4","text":"","tags":["changelog","release-notes"]},{"location":"about/changelog/#whats-changed_11","title":"What's Changed","text":"<ul> <li>Support for python3.8 in #1</li> <li>Feature/publish action in #2</li> </ul> <p>Full Changelog: https://github.com/dsoftwareinc/fakeredis-py/compare/1.7.1...v1.7.4</p>","tags":["changelog","release-notes"]},{"location":"about/contributing/","title":"Contributing to fakeredis","text":"<p>First off, thanks for taking the time to contribute! \u2764\ufe0f</p> <p>All types of contributions are encouraged and valued. See the table of contents for different ways to help and details about how this project handles them. Please make sure to read the relevant section before making your contribution. It will make it a lot easier for the maintainers and smooth out the experience for all involved. The community looks forward to your contributions. \ud83c\udf89</p> <p>And if you like the project, but just don't have time to contribute, that's fine.</p> <p>There are other easy ways to support the project and show your appreciation, which we would also be very happy about:</p> <ul> <li>Star the project</li> <li>Tweet about it</li> <li>Refer to this project in your project's readme</li> <li>Mention the project at local meetups and tell your friends/colleagues</li> </ul>"},{"location":"about/contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>This project and everyone participating in it is governed by the fakeredis Code of Conduct. By participating, you are expected to uphold this code. Please report unacceptable behavior to daniel@moransoftware.ca.</p>"},{"location":"about/contributing/#i-have-a-question","title":"I Have a Question","text":"<p>If you want to ask a question, we assume that you have read the available Documentation.</p> <p>Before you ask a question, it is best to search for existing Issues that might help you. In case you have found a suitable issue and still need clarification, you can write your question in this issue. It is also advisable to search the internet for answers first.</p> <p>If you then still feel the need to ask a question and need clarification, we recommend the following:</p> <ul> <li>Open an Issue.</li> <li>Provide as much context as you can about what you're running into.</li> <li>Provide project and platform versions (nodejs, npm, etc), depending on what seems relevant.</li> </ul> <p>We will then take care of the issue as soon as possible.</p>"},{"location":"about/contributing/#i-want-to-contribute","title":"I Want To Contribute","text":""},{"location":"about/contributing/#legal-notice","title":"Legal Notice","text":"<p>When contributing to this project, you must agree that you have authored 100% of the content, that you have the necessary rights to the content and that the content you contribute may be provided under the project license.</p>"},{"location":"about/contributing/#reporting-bugs","title":"Reporting Bugs","text":""},{"location":"about/contributing/#before-submitting-a-bug-report","title":"Before Submitting a Bug Report","text":"<p>A good bug report shouldn't leave others needing to chase you up for more information. Therefore, we ask you to investigate carefully, collect information and describe the issue in detail in your report. Please complete the following steps in advance to help us fix any potential bug as fast as possible.</p> <ul> <li>Make sure that you are using the latest version.</li> <li>Determine if your bug is really a bug and not an error on your side, e.g., using incompatible   environment components/versions (Make sure that you have read   the documentation.   If you are looking for support, you might want to check this section).</li> <li>To see if other users have experienced (and potentially already solved) the same issue you are having,   check if there is not already a bug report existing for your bug or error in   the bug tracker.</li> <li>Also make sure to search the internet (including Stack Overflow) to see if users outside the GitHub   community have discussed the issue.</li> <li>Collect information about the bug:<ul> <li>Stack trace (Traceback)</li> <li>OS, Platform and Version (Windows, Linux, macOS, x86, ARM)</li> <li>Version of the interpreter, compiler, SDK, runtime environment, package manager, depending on what seems relevant.</li> <li>Possibly your input and the output</li> <li>Can you reliably reproduce the issue? And can you also reproduce it with older versions?</li> </ul> </li> </ul>"},{"location":"about/contributing/#how-do-i-submit-a-good-bug-report","title":"How Do I Submit a Good Bug Report?","text":"<p>You must never report security related issues, vulnerabilities or bugs, including sensitive information to the issue tracker, or elsewhere in public. Instead, sensitive bugs must be sent by email to daniel@moransoftware.ca.</p> <p>We use GitHub issues to track bugs and errors. If you run into an issue with the project:</p> <ul> <li>Open an Issue.   (Since we can't be sure at this point whether it is a bug or not, we ask you not to talk about a bug yet and   not to label the issue.)</li> <li>Follow the issue template and provide as much context as possible and describe the reproduction steps that someone   else can follow to recreate the issue on their own.   This usually includes your code.   For good bug reports, you should isolate the problem and create a reduced test case.</li> <li>Provide the information you collected in the previous section.</li> </ul> <p>Once it's filed:</p> <ul> <li>The project team will label the issue accordingly.</li> <li>A team member will try to reproduce the issue with your provided steps. If there are no reproduction steps or no   obvious way to reproduce the issue, the team will ask you for those steps and mark the issue as <code>needs-repro</code>. Bugs   with the <code>needs-repro</code> tag will not be addressed until they are reproduced.</li> <li>If the team is able to reproduce the issue, it will be marked <code>needs-fix</code>, as well as possibly other tags (such   as <code>critical</code>), and the issue will be left to be implemented by someone.</li> </ul>"},{"location":"about/contributing/#suggesting-enhancements","title":"Suggesting Enhancements","text":"<p>This section guides you through submitting an enhancement suggestion for fakeredis, including completely new features and minor improvements to existing functionality. Following these guidelines will help maintainers and the community to understand your suggestion and find related suggestions.</p>"},{"location":"about/contributing/#before-submitting-an-enhancement","title":"Before Submitting an Enhancement","text":"<ul> <li>Make sure that you are using the latest version.</li> <li>Read the documentation carefully and find out if the functionality is already   covered, maybe by an individual configuration.</li> <li>Perform a search to see if the enhancement has already been suggested.   If it has, add a comment to the existing issue instead of opening a new one.</li> <li>Find out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to   convince the project's developers of the merits of this feature. Keep in mind that we want features that will be   useful to the majority of our users and not just a small subset. If you're just targeting a minority of users,   consider writing an add-on/plugin library.</li> </ul>"},{"location":"about/contributing/#how-do-i-submit-a-good-enhancement-suggestion","title":"How Do I Submit a Good Enhancement Suggestion?","text":"<p>Enhancement suggestions are tracked as GitHub issues.</p> <ul> <li>Use a clear and descriptive title for the issue to identify the suggestion.</li> <li>Provide a step-by-step description of the suggested enhancement in as many details as possible.</li> <li>Describe the current behavior and explain which behavior you expected to see instead and why. At this point   you can also tell which alternatives do not work for you.</li> <li>You may want to include screenshots and animated GIFs which help you demonstrate the steps or point out the part   which the suggestion is related to. You can use this tool to record GIFs on macOS   and Windows, and this tool   or this tool on   Linux. </li> <li>Explain why this enhancement would be useful to most fakeredis users. You may also want to point out the other   projects that solved it better and which could serve as inspiration.</li> </ul>"},{"location":"about/contributing/#your-first-code-contribution","title":"Your First Code Contribution","text":"<p>Unsure where to begin contributing? You can start by looking through help-wanted issues.</p> <p>Never contributed to open source before? Here are a couple of friendly tutorials:</p> <ul> <li>http://makeapullrequest.com/</li> <li>http://www.firsttimersonly.com/</li> </ul>"},{"location":"about/contributing/#getting-started","title":"Getting started","text":"<ul> <li>Create your own fork of the repository</li> <li>Do the changes in your fork</li> <li>Setup poetry <code>pip install poetry</code></li> <li>Let poetry install everything required for a local environment <code>poetry install</code></li> <li>To run all tests, use: <code>poetry run pytest -v</code></li> <li>Note: In order to run the tests, a real redis server should be running.   The tests are comparing the results of each command between fakeredis and a real redis.<ul> <li>You can use <code>docker-compose up redis6</code> or <code>docker-compose up redis7</code> to run redis.</li> </ul> </li> <li>Run test with coverage using <code>poetry run pytest -v --cov=fakeredis --cov-branch</code>   and then you can run <code>coverage report</code>.</li> </ul>"},{"location":"about/contributing/#improving-the-documentation","title":"Improving The Documentation","text":"<ul> <li>Create your own fork of the repository.</li> <li>Do the changes in your fork, probably under the <code>docs/</code> folder.</li> <li>Create a pull request with the changes.</li> </ul>"},{"location":"about/contributing/#style-guides","title":"Style guides","text":""},{"location":"about/contributing/#commit-messages","title":"Commit Messages","text":"<p>Taken from conventional commits</p> <pre><code>&lt;type&gt;[optional scope]: &lt;description&gt;\n\n[optional body]\n\n[optional footer(s)]\n</code></pre> <p>The commit contains the following structural elements to communicate intent to the consumers of your library:</p> <ul> <li><code>fix:</code> a commit of the type fix patches a bug in your codebase (this correlates with <code>PATCH</code> in Semantic Versioning).</li> <li><code>feat:</code> a commit of the type feat introduces a new feature to the codebase (this correlates with <code>MINOR</code> in Semantic   Versioning).</li> <li><code>BREAKING CHANGE:</code> a commit that has a footer BREAKING CHANGE:, or appends a ! after the type/scope, introduces a   breaking API change (correlating with MAJOR in Semantic Versioning). A BREAKING CHANGE can be part of commits of any   type.</li> <li>types other than <code>fix:</code> and <code>feat:</code> are allowed, for example, <code>@commitlint/config-conventional</code> (based on the Angular   convention) recommends <code>build:</code>, <code>chore:</code>, <code>ci:</code>, <code>docs:</code>, <code>style:</code>, <code>refactor:</code>, <code>perf:</code>, <code>test:</code>, and others.</li> <li>footers other than <code>BREAKING CHANGE: &lt;description&gt;</code> may be provided and follow a convention similar to   git trailer format.</li> </ul> <p>Additional types are not mandated by the Conventional Commits specification, and have no implicit effect in Semantic Versioning (unless they include a BREAKING CHANGE). A scope may be provided to a commit\u2019s type, to provide additional contextual information and is contained within parenthesis, e.g., feat(parser): add ability to parse arrays.</p>"},{"location":"about/contributing/#join-the-project-team","title":"Join The Project Team","text":"<p>If you wish to be added to the project team as a collaborator, please send a message to daniel@moransoftware.ca with explanation.</p>"},{"location":"about/license/","title":"License","text":"<p>The legal stuff.</p> <p>BSD 3-Clause License</p> <p>Copyright \u00a9 2022-, Daniel Moran, 2017-2018, Bruce Merry, 2011 James Saryerwinnie, All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <ol> <li> <p>Redistributions of source code must retain the above copyright notice, this    list of conditions and the following disclaimer.</p> </li> <li> <p>Redistributions in binary form must reproduce the above copyright notice,    this list of conditions and the following disclaimer in the documentation    and/or other materials provided with the distribution.</p> </li> <li> <p>Neither the name of the copyright holder nor the names of its    contributors may be used to endorse or promote products derived from    this software without specific prior written permission.</p> </li> </ol> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"},{"location":"guides/implement-command/","title":"Implementing support for a command","text":"<p>Creating a new command support should be done in the <code>FakeSocket</code> class (in <code>_fakesocket.py</code>) by creating the method and using <code>@command</code> decorator (which should be the command syntax, you can use existing samples on the file).</p> <p>For example:</p> <pre><code>class FakeSocket(BaseFakeSocket, FakeLuaSocket):\n    # ...\n    @command(name='zscore', fixed=(Key(ZSet), bytes), repeat=(), flags=[])\n    def zscore(self, key, member):\n        try:\n            return self._encodefloat(key.value[member], False)\n        except KeyError:\n            return None\n</code></pre>"},{"location":"guides/implement-command/#parsing-command-arguments","title":"Parsing command arguments","text":"<p>The <code>extract_args</code> method should help to extract arguments from <code>*args</code>. It extracts from actual arguments which arguments exist and their value if relevant.</p> <p>Parameters <code>extract_args</code> expect:</p> <ul> <li><code>actual_args</code>   The actual arguments to parse</li> <li><code>expected</code>   Arguments to look for, see below explanation.</li> <li><code>error_on_unexpected</code> (default: True)   Should an error be raised when actual_args contain an unexpected argument?</li> <li><code>left_from_first_unexpected</code> (default: True)   Once reaching an unexpected argument in actual_args,   Should parsing stop?</li> </ul> <p>It returns two lists:</p> <ul> <li>List of values for expected arguments.</li> <li>List of remaining args.</li> </ul>"},{"location":"guides/implement-command/#expected-argument-structure","title":"Expected argument structure:","text":"<ul> <li>If expected argument has only a name, it will be parsed as boolean   (Whether it exists in actual <code>*args</code> or not).</li> <li>In order to parse a numerical value following the expected argument,   a <code>+</code> prefix is needed, e.g., <code>+px</code> will parse <code>args=('px', '1')</code> as <code>px=1</code></li> <li>In order to parse a string value following the expected argument,   a <code>*</code> prefix is needed, e.g., <code>*type</code> will parse <code>args=('type', 'number')</code> as <code>type='number'</code></li> <li>You can have more than one <code>+</code>/<code>*</code>, e.g., <code>++limit</code> will parse <code>args=('limit','1','10')</code>   as <code>limit=(1,10)</code></li> </ul>"},{"location":"guides/implement-command/#how-to-use-command-decorator","title":"How to use <code>@command</code> decorator","text":"<p>The <code>@command</code> decorator register the method as a redis command and define the accepted format for it. It will create a <code>Signature</code> instance for the command. Whenever the command is triggered, the <code>Signature.apply(..)</code> method will be triggered to check the validity of syntax and analyze the command arguments.</p> <p>By default, it takes the name of the method as the command name.</p> <p>If the method implements a subcommand (e.g., <code>SCRIPT LOAD</code>), a Redis module command (e.g., <code>JSON.GET</code>), or a python reserve word where you can not use it as the method name (e.g., <code>EXEC</code>), then you can explicitly supply the name parameter.</p> <p>If the command implemented requires certain arguments, they can be supplied in the first parameter as a tuple. When receiving the command through the socket, the bytes will be converted to the argument types supplied or remain as <code>bytes</code>.</p> <p>Argument types (All in <code>_commands.py</code>):</p> <ul> <li><code>Key(KeyType)</code> - Will get from the DB the key and validate its value is of <code>KeyType</code> (if <code>KeyType</code> is supplied).   It will generate a <code>CommandItem</code> from it which provides access to the database value.</li> <li><code>Int</code> - Decode the <code>bytes</code> to <code>int</code> and vice versa.</li> <li><code>DbIndex</code>/<code>BitOffset</code>/<code>BitValue</code>/<code>Timeout</code> - Basically the same behavior as <code>Int</code>, but with different messages when   encode/decode fail.</li> <li><code>Hash</code> - dictionary, usually describe the type of value stored in Key <code>Key(Hash)</code></li> <li><code>Float</code> - Encode/Decode <code>bytes</code> &lt;-&gt; <code>float</code></li> <li><code>SortFloat</code> - Similar to <code>Float</code> with different error messages.</li> <li><code>ScoreTest</code> - Argument converter for sorted set score endpoints.</li> <li><code>StringTest</code> - Argument converter for sorted set endpoints (lex).</li> <li><code>ZSet</code> - Sorted Set.</li> </ul>"},{"location":"guides/implement-command/#implement-a-test-for-it","title":"Implement a test for it","text":"<p>There are multiple scenarios for test, with different versions of redis server, redis-py, etc. The tests not only assert the validity of output but runs the same test on a real redis-server and compares the output to the real server output.</p> <ul> <li>Create tests in the relevant test file.</li> <li>If support for the command was introduced in a certain version of redis-py   (see redis-py release notes) you can use the   decorator <code>@testtools.run_test_if_redispy_ver</code> on your tests. example:</li> </ul> <pre><code>@testtools.run_test_if_redispy_ver('gte', '4.2.0')  # This will run for redis-py 4.2.0 or above.\ndef test_expire_should_not_expire__when_no_expire_is_set(r):\n    r.set('foo', 'bar')\n    assert r.get('foo') == b'bar'\n    assert r.expire('foo', 1, xx=True) == 0\n</code></pre>"},{"location":"guides/implement-command/#updating-documentation","title":"Updating documentation","text":"<p>Lastly, run from the root of the project the script to regenerate documentation for supported and unsupported commands:</p> <pre><code>python scripts/generate_supported_commands_doc.py\n</code></pre> <p>Include the changes in the <code>docs/</code> directory in your pull request.</p>"},{"location":"guides/test-case/","title":"Write a new test case","text":"<p>There are multiple scenarios for test, with different versions of python, redis-py and redis server, etc. The tests not only assert the validity of the expected output with FakeRedis but also with a real redis server. That way parity of real Redis and FakeRedis is ensured.</p> <p>To write a new test case for a command:</p> <ul> <li>Determine which mixin the command belongs to and the test file for   the mixin (e.g., <code>string_mixin.py</code> =&gt; <code>test_string_commands.py</code>).</li> <li>Tests should support python 3.7 and above.</li> <li>Determine when support for the command was introduced<ul> <li>To limit the redis-server versions, it will run on use:   <code>@pytest.mark.max_server(version)</code> and <code>@pytest.mark.min_server(version)</code></li> <li>To limit the redis-py version use <code>@run_test_if_redispy_ver('gte', version)</code>   (you can use <code>ge</code>/<code>gte</code>/<code>lte</code>/<code>lt</code>/<code>eq</code>/<code>ne</code>).</li> </ul> </li> <li>pytest will inject a redis connection to the argument <code>r</code> of the test.</li> </ul> <p>Sample of running a test for redis-py v4.2.0 and above, redis-server 7.0 and above.</p> <pre><code>@pytest.mark.min_server('7')\n@testtools.run_test_if_redispy_ver('gte', '4.2.0')\ndef test_expire_should_not_expire__when_no_expire_is_set(r):\n    r.set('foo', 'bar')\n    assert r.get('foo') == b'bar'\n    assert r.expire('foo', 1, xx=True) == 0\n</code></pre>"},{"location":"supported-commands/","title":"Supported commands","text":"<p>Commands from Redis, RedisJSON, RedisTimeSeries, and RedisBloom are supported.</p> <p>Additionally, Dragonfly specific commands are also supported.</p>"},{"location":"supported-commands/DRAGONFLY/","title":"Dragonfly specific commands","text":"<p>To implement support for a command, see here</p> <p>These are commands that are not implemented in Redis but supported in Dragonfly and FakeRedis. To use these commands, you can call <code>execute_command</code> with the command name and arguments as follows:</p> <pre><code>client = FakeRedis(server_type=\"dragonfly\")\nclient.execute_command(\"SADDEX\", 10, \"key\", \"value\")\n</code></pre>"},{"location":"supported-commands/DRAGONFLY/#saddex","title":"SADDEX","text":"<p>Similar to SADD but adds one or more members that expire after specified number of seconds. An error is returned when the value stored at key is not a set.</p>"},{"location":"supported-commands/Redis/BITMAP/","title":"Redis <code>bitmap</code> commands (6/6 implemented)","text":""},{"location":"supported-commands/Redis/BITMAP/#bitcount","title":"BITCOUNT","text":"<p>Counts the number of set bits (population counting) in a string.</p>"},{"location":"supported-commands/Redis/BITMAP/#bitfield","title":"BITFIELD","text":"<p>Performs arbitrary bitfield integer operations on strings.</p>"},{"location":"supported-commands/Redis/BITMAP/#bitop","title":"BITOP","text":"<p>Performs bitwise operations on multiple strings, and stores the result.</p>"},{"location":"supported-commands/Redis/BITMAP/#bitpos","title":"BITPOS","text":"<p>Finds the first set (1) or clear (0) bit in a string.</p>"},{"location":"supported-commands/Redis/BITMAP/#getbit","title":"GETBIT","text":"<p>Returns a bit value by offset.</p>"},{"location":"supported-commands/Redis/BITMAP/#setbit","title":"SETBIT","text":"<p>Sets or clears the bit at offset of the string value. Creates the key if it doesn't exist.</p>"},{"location":"supported-commands/Redis/CLUSTER/","title":"Cluster","text":""},{"location":"supported-commands/Redis/CLUSTER/#unsupported-cluster-commands","title":"Unsupported cluster commands","text":"<p>To implement support for a command, see here </p>"},{"location":"supported-commands/Redis/CLUSTER/#asking-not-implemented","title":"ASKING (not implemented)","text":"<p>Signals that a cluster client is following an -ASK redirect.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-not-implemented","title":"CLUSTER (not implemented)","text":"<p>A container for Redis Cluster commands.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-addslots-not-implemented","title":"CLUSTER ADDSLOTS (not implemented)","text":"<p>Assigns new hash slots to a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-addslotsrange-not-implemented","title":"CLUSTER ADDSLOTSRANGE (not implemented)","text":"<p>Assigns new hash slot ranges to a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-bumpepoch-not-implemented","title":"CLUSTER BUMPEPOCH (not implemented)","text":"<p>Advances the cluster config epoch.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-count-failure-reports-not-implemented","title":"CLUSTER COUNT-FAILURE-REPORTS (not implemented)","text":"<p>Returns the number of active failure reports active for a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-countkeysinslot-not-implemented","title":"CLUSTER COUNTKEYSINSLOT (not implemented)","text":"<p>Returns the number of keys in a hash slot.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-delslots-not-implemented","title":"CLUSTER DELSLOTS (not implemented)","text":"<p>Sets hash slots as unbound for a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-delslotsrange-not-implemented","title":"CLUSTER DELSLOTSRANGE (not implemented)","text":"<p>Sets hash slot ranges as unbound for a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-failover-not-implemented","title":"CLUSTER FAILOVER (not implemented)","text":"<p>Forces a replica to perform a manual failover of its master.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-flushslots-not-implemented","title":"CLUSTER FLUSHSLOTS (not implemented)","text":"<p>Deletes all slots information from a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-forget-not-implemented","title":"CLUSTER FORGET (not implemented)","text":"<p>Removes a node from the nodes table.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-getkeysinslot-not-implemented","title":"CLUSTER GETKEYSINSLOT (not implemented)","text":"<p>Returns the key names in a hash slot.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-help-not-implemented","title":"CLUSTER HELP (not implemented)","text":"<p>Returns helpful text about the different subcommands.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-info-not-implemented","title":"CLUSTER INFO (not implemented)","text":"<p>Returns information about the state of a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-keyslot-not-implemented","title":"CLUSTER KEYSLOT (not implemented)","text":"<p>Returns the hash slot for a key.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-links-not-implemented","title":"CLUSTER LINKS (not implemented)","text":"<p>Returns a list of all TCP links to and from peer nodes.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-meet-not-implemented","title":"CLUSTER MEET (not implemented)","text":"<p>Forces a node to handshake with another node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-myid-not-implemented","title":"CLUSTER MYID (not implemented)","text":"<p>Returns the ID of a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-myshardid-not-implemented","title":"CLUSTER MYSHARDID (not implemented)","text":"<p>Returns the shard ID of a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-nodes-not-implemented","title":"CLUSTER NODES (not implemented)","text":"<p>Returns the cluster configuration for a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-replicas-not-implemented","title":"CLUSTER REPLICAS (not implemented)","text":"<p>Lists the replica nodes of a master node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-replicate-not-implemented","title":"CLUSTER REPLICATE (not implemented)","text":"<p>Configure a node as replica of a master node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-reset-not-implemented","title":"CLUSTER RESET (not implemented)","text":"<p>Resets a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-saveconfig-not-implemented","title":"CLUSTER SAVECONFIG (not implemented)","text":"<p>Forces a node to save the cluster configuration to disk.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-set-config-epoch-not-implemented","title":"CLUSTER SET-CONFIG-EPOCH (not implemented)","text":"<p>Sets the configuration epoch for a new node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-setslot-not-implemented","title":"CLUSTER SETSLOT (not implemented)","text":"<p>Binds a hash slot to a node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-shards-not-implemented","title":"CLUSTER SHARDS (not implemented)","text":"<p>Returns the mapping of cluster slots to shards.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-slaves-not-implemented","title":"CLUSTER SLAVES (not implemented)","text":"<p>Lists the replica nodes of a master node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#cluster-slots-not-implemented","title":"CLUSTER SLOTS (not implemented)","text":"<p>Returns the mapping of cluster slots to nodes.</p>"},{"location":"supported-commands/Redis/CLUSTER/#readonly-not-implemented","title":"READONLY (not implemented)","text":"<p>Enables read-only queries for a connection to a Redis Cluster replica node.</p>"},{"location":"supported-commands/Redis/CLUSTER/#readwrite-not-implemented","title":"READWRITE (not implemented)","text":"<p>Enables read-write queries for a connection to a Reids Cluster replica node.</p>"},{"location":"supported-commands/Redis/CONNECTION/","title":"Redis <code>connection</code> commands (11/24 implemented)","text":""},{"location":"supported-commands/Redis/CONNECTION/#auth","title":"AUTH","text":"<p>Authenticates the connection.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-getname","title":"CLIENT GETNAME","text":"<p>Returns the name of the connection.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-id","title":"CLIENT ID","text":"<p>Returns the unique client ID of the connection.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-info","title":"CLIENT INFO","text":"<p>Returns information about the connection.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-list","title":"CLIENT LIST","text":"<p>Lists open connections.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-setinfo","title":"CLIENT SETINFO","text":"<p>Sets information specific to the client or connection.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-setname","title":"CLIENT SETNAME","text":"<p>Sets the connection name.</p>"},{"location":"supported-commands/Redis/CONNECTION/#echo","title":"ECHO","text":"<p>Returns the given string.</p>"},{"location":"supported-commands/Redis/CONNECTION/#hello","title":"HELLO","text":"<p>Handshakes with the Redis server.</p>"},{"location":"supported-commands/Redis/CONNECTION/#ping","title":"PING","text":"<p>Returns the server's liveliness response.</p>"},{"location":"supported-commands/Redis/CONNECTION/#select","title":"SELECT","text":"<p>Changes the selected database.</p>"},{"location":"supported-commands/Redis/CONNECTION/#unsupported-connection-commands","title":"Unsupported connection commands","text":"<p>To implement support for a command, see here</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-not-implemented","title":"CLIENT (not implemented)","text":"<p>A container for client connection commands.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-caching-not-implemented","title":"CLIENT CACHING (not implemented)","text":"<p>Instructs the server whether to track the keys in the next request.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-getredir-not-implemented","title":"CLIENT GETREDIR (not implemented)","text":"<p>Returns the client ID to which the connection's tracking notifications are redirected.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-kill-not-implemented","title":"CLIENT KILL (not implemented)","text":"<p>Terminates open connections.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-no-evict-not-implemented","title":"CLIENT NO-EVICT (not implemented)","text":"<p>Sets the client eviction mode of the connection.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-no-touch-not-implemented","title":"CLIENT NO-TOUCH (not implemented)","text":"<p>Controls whether commands sent by the client affect the LRU/LFU of accessed keys.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-pause-not-implemented","title":"CLIENT PAUSE (not implemented)","text":"<p>Suspends commands processing.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-reply-not-implemented","title":"CLIENT REPLY (not implemented)","text":"<p>Instructs the server whether to reply to commands.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-tracking-not-implemented","title":"CLIENT TRACKING (not implemented)","text":"<p>Controls server-assisted client-side caching for the connection.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-trackinginfo-not-implemented","title":"CLIENT TRACKINGINFO (not implemented)","text":"<p>Returns information about server-assisted client-side caching for the connection.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-unblock-not-implemented","title":"CLIENT UNBLOCK (not implemented)","text":"<p>Unblocks a client blocked by a blocking command from a different connection.</p>"},{"location":"supported-commands/Redis/CONNECTION/#client-unpause-not-implemented","title":"CLIENT UNPAUSE (not implemented)","text":"<p>Resumes processing commands from paused clients.</p>"},{"location":"supported-commands/Redis/CONNECTION/#reset-not-implemented","title":"RESET (not implemented)","text":"<p>Resets the connection.</p>"},{"location":"supported-commands/Redis/GENERIC/","title":"Redis <code>generic</code> commands (23/26 implemented)","text":""},{"location":"supported-commands/Redis/GENERIC/#del","title":"DEL","text":"<p>Deletes one or more keys.</p>"},{"location":"supported-commands/Redis/GENERIC/#dump","title":"DUMP","text":"<p>Returns a serialized representation of the value stored at a key.</p>"},{"location":"supported-commands/Redis/GENERIC/#exists","title":"EXISTS","text":"<p>Determines whether one or more keys exist.</p>"},{"location":"supported-commands/Redis/GENERIC/#expire","title":"EXPIRE","text":"<p>Sets the expiration time of a key in seconds.</p>"},{"location":"supported-commands/Redis/GENERIC/#expireat","title":"EXPIREAT","text":"<p>Sets the expiration time of a key to a Unix timestamp.</p>"},{"location":"supported-commands/Redis/GENERIC/#expiretime","title":"EXPIRETIME","text":"<p>Returns the expiration time of a key as a Unix timestamp.</p>"},{"location":"supported-commands/Redis/GENERIC/#keys","title":"KEYS","text":"<p>Returns all key names that match a pattern.</p>"},{"location":"supported-commands/Redis/GENERIC/#move","title":"MOVE","text":"<p>Moves a key to another database.</p>"},{"location":"supported-commands/Redis/GENERIC/#persist","title":"PERSIST","text":"<p>Removes the expiration time of a key.</p>"},{"location":"supported-commands/Redis/GENERIC/#pexpire","title":"PEXPIRE","text":"<p>Sets the expiration time of a key in milliseconds.</p>"},{"location":"supported-commands/Redis/GENERIC/#pexpireat","title":"PEXPIREAT","text":"<p>Sets the expiration time of a key to a Unix milliseconds timestamp.</p>"},{"location":"supported-commands/Redis/GENERIC/#pexpiretime","title":"PEXPIRETIME","text":"<p>Returns the expiration time of a key as a Unix milliseconds timestamp.</p>"},{"location":"supported-commands/Redis/GENERIC/#pttl","title":"PTTL","text":"<p>Returns the expiration time in milliseconds of a key.</p>"},{"location":"supported-commands/Redis/GENERIC/#randomkey","title":"RANDOMKEY","text":"<p>Returns a random key name from the database.</p>"},{"location":"supported-commands/Redis/GENERIC/#rename","title":"RENAME","text":"<p>Renames a key and overwrites the destination.</p>"},{"location":"supported-commands/Redis/GENERIC/#renamenx","title":"RENAMENX","text":"<p>Renames a key only when the target key name doesn't exist.</p>"},{"location":"supported-commands/Redis/GENERIC/#restore","title":"RESTORE","text":"<p>Creates a key from the serialized representation of a value.</p>"},{"location":"supported-commands/Redis/GENERIC/#scan","title":"SCAN","text":"<p>Iterates over the key names in the database.</p>"},{"location":"supported-commands/Redis/GENERIC/#sort","title":"SORT","text":"<p>Sorts the elements in a list, a set, or a sorted set, optionally storing the result.</p>"},{"location":"supported-commands/Redis/GENERIC/#sort_ro","title":"SORT_RO","text":"<p>Returns the sorted elements of a list, a set, or a sorted set.</p>"},{"location":"supported-commands/Redis/GENERIC/#ttl","title":"TTL","text":"<p>Returns the expiration time in seconds of a key.</p>"},{"location":"supported-commands/Redis/GENERIC/#type","title":"TYPE","text":"<p>Determines the type of value stored at a key.</p>"},{"location":"supported-commands/Redis/GENERIC/#unlink","title":"UNLINK","text":"<p>Asynchronously deletes one or more keys.</p>"},{"location":"supported-commands/Redis/GENERIC/#unsupported-generic-commands","title":"Unsupported generic commands","text":"<p>To implement support for a command, see here </p>"},{"location":"supported-commands/Redis/GENERIC/#copy-not-implemented","title":"COPY (not implemented)","text":"<p>Copies the value of a key to a new key.</p>"},{"location":"supported-commands/Redis/GENERIC/#wait-not-implemented","title":"WAIT (not implemented)","text":"<p>Blocks until the asynchronous replication of all preceding write commands sent by the connection is completed.</p>"},{"location":"supported-commands/Redis/GENERIC/#waitaof-not-implemented","title":"WAITAOF (not implemented)","text":"<p>Blocks until all of the preceding write commands sent by the connection are written to the append-only file of the master and/or replicas.</p>"},{"location":"supported-commands/Redis/GEO/","title":"Redis <code>geo</code> commands (10/10 implemented)","text":""},{"location":"supported-commands/Redis/GEO/#geoadd","title":"GEOADD","text":"<p>Adds one or more members to a geospatial index. The key is created if it doesn't exist.</p>"},{"location":"supported-commands/Redis/GEO/#geodist","title":"GEODIST","text":"<p>Returns the distance between two members of a geospatial index.</p>"},{"location":"supported-commands/Redis/GEO/#geohash","title":"GEOHASH","text":"<p>Returns members from a geospatial index as geohash strings.</p>"},{"location":"supported-commands/Redis/GEO/#geopos","title":"GEOPOS","text":"<p>Returns the longitude and latitude of members from a geospatial index.</p>"},{"location":"supported-commands/Redis/GEO/#georadius","title":"GEORADIUS","text":"<p>Queries a geospatial index for members within a distance from a coordinate, optionally stores the result.</p>"},{"location":"supported-commands/Redis/GEO/#georadius_ro","title":"GEORADIUS_RO","text":"<p>Returns members from a geospatial index that are within a distance from a coordinate.</p>"},{"location":"supported-commands/Redis/GEO/#georadiusbymember","title":"GEORADIUSBYMEMBER","text":"<p>Queries a geospatial index for members within a distance from a member, optionally stores the result.</p>"},{"location":"supported-commands/Redis/GEO/#georadiusbymember_ro","title":"GEORADIUSBYMEMBER_RO","text":"<p>Returns members from a geospatial index that are within a distance from a member.</p>"},{"location":"supported-commands/Redis/GEO/#geosearch","title":"GEOSEARCH","text":"<p>Queries a geospatial index for members inside an area of a box or a circle.</p>"},{"location":"supported-commands/Redis/GEO/#geosearchstore","title":"GEOSEARCHSTORE","text":"<p>Queries a geospatial index for members inside an area of a box or a circle, optionally stores the result.</p>"},{"location":"supported-commands/Redis/HASH/","title":"Redis <code>hash</code> commands (25/27 implemented)","text":""},{"location":"supported-commands/Redis/HASH/#hdel","title":"HDEL","text":"<p>Deletes one or more fields and their values from a hash. Deletes the hash if no fields remain.</p>"},{"location":"supported-commands/Redis/HASH/#hexists","title":"HEXISTS","text":"<p>Determines whether a field exists in a hash.</p>"},{"location":"supported-commands/Redis/HASH/#hexpire","title":"HEXPIRE","text":"<p>Set expiry for hash field using relative time to expire (seconds)</p>"},{"location":"supported-commands/Redis/HASH/#hexpireat","title":"HEXPIREAT","text":"<p>Set expiry for hash field using an absolute Unix timestamp (seconds)</p>"},{"location":"supported-commands/Redis/HASH/#hexpiretime","title":"HEXPIRETIME","text":"<p>Returns the expiration time of a hash field as a Unix timestamp, in seconds.</p>"},{"location":"supported-commands/Redis/HASH/#hget","title":"HGET","text":"<p>Returns the value of a field in a hash.</p>"},{"location":"supported-commands/Redis/HASH/#hgetall","title":"HGETALL","text":"<p>Returns all fields and values in a hash.</p>"},{"location":"supported-commands/Redis/HASH/#hincrby","title":"HINCRBY","text":"<p>Increments the integer value of a field in a hash by a number. Uses 0 as initial value if the field doesn't exist.</p>"},{"location":"supported-commands/Redis/HASH/#hincrbyfloat","title":"HINCRBYFLOAT","text":"<p>Increments the floating point value of a field by a number. Uses 0 as initial value if the field doesn't exist.</p>"},{"location":"supported-commands/Redis/HASH/#hkeys","title":"HKEYS","text":"<p>Returns all fields in a hash.</p>"},{"location":"supported-commands/Redis/HASH/#hlen","title":"HLEN","text":"<p>Returns the number of fields in a hash.</p>"},{"location":"supported-commands/Redis/HASH/#hmget","title":"HMGET","text":"<p>Returns the values of all fields in a hash.</p>"},{"location":"supported-commands/Redis/HASH/#hmset","title":"HMSET","text":"<p>Sets the values of multiple fields.</p>"},{"location":"supported-commands/Redis/HASH/#hpersist","title":"HPERSIST","text":"<p>Removes the expiration time for each specified field</p>"},{"location":"supported-commands/Redis/HASH/#hpexpire","title":"HPEXPIRE","text":"<p>Set expiry for hash field using relative time to expire (milliseconds)</p>"},{"location":"supported-commands/Redis/HASH/#hpexpireat","title":"HPEXPIREAT","text":"<p>Set expiry for hash field using an absolute Unix timestamp (milliseconds)</p>"},{"location":"supported-commands/Redis/HASH/#hpexpiretime","title":"HPEXPIRETIME","text":"<p>Returns the expiration time of a hash field as a Unix timestamp, in msec.</p>"},{"location":"supported-commands/Redis/HASH/#hpttl","title":"HPTTL","text":"<p>Returns the TTL in milliseconds of a hash field.</p>"},{"location":"supported-commands/Redis/HASH/#hrandfield","title":"HRANDFIELD","text":"<p>Returns one or more random fields from a hash.</p>"},{"location":"supported-commands/Redis/HASH/#hscan","title":"HSCAN","text":"<p>Iterates over fields and values of a hash.</p>"},{"location":"supported-commands/Redis/HASH/#hset","title":"HSET","text":"<p>Creates or modifies the value of a field in a hash.</p>"},{"location":"supported-commands/Redis/HASH/#hsetnx","title":"HSETNX","text":"<p>Sets the value of a field in a hash only when the field doesn't exist.</p>"},{"location":"supported-commands/Redis/HASH/#hstrlen","title":"HSTRLEN","text":"<p>Returns the length of the value of a field.</p>"},{"location":"supported-commands/Redis/HASH/#httl","title":"HTTL","text":"<p>Returns the TTL in seconds of a hash field.</p>"},{"location":"supported-commands/Redis/HASH/#hvals","title":"HVALS","text":"<p>Returns all values in a hash.</p>"},{"location":"supported-commands/Redis/HASH/#unsupported-hash-commands","title":"Unsupported hash commands","text":"<p>To implement support for a command, see here </p>"},{"location":"supported-commands/Redis/HASH/#hgetf-not-implemented","title":"HGETF (not implemented)","text":"<p>For each specified field, returns its value and optionally set the field's remaining expiration time in seconds / milliseconds</p>"},{"location":"supported-commands/Redis/HASH/#hsetf-not-implemented","title":"HSETF (not implemented)","text":"<p>For each specified field, returns its value and optionally set the field's remaining expiration time in seconds / milliseconds</p>"},{"location":"supported-commands/Redis/HYPERLOGLOG/","title":"Redis <code>hyperloglog</code> commands (3/3 implemented)","text":""},{"location":"supported-commands/Redis/HYPERLOGLOG/#pfadd","title":"PFADD","text":"<p>Adds elements to a HyperLogLog key. Creates the key if it doesn't exist.</p>"},{"location":"supported-commands/Redis/HYPERLOGLOG/#pfcount","title":"PFCOUNT","text":"<p>Returns the approximated cardinality of the set(s) observed by the HyperLogLog key(s).</p>"},{"location":"supported-commands/Redis/HYPERLOGLOG/#pfmerge","title":"PFMERGE","text":"<p>Merges one or more HyperLogLog values into a single key.</p>"},{"location":"supported-commands/Redis/LIST/","title":"Redis <code>list</code> commands (22/22 implemented)","text":""},{"location":"supported-commands/Redis/LIST/#blmove","title":"BLMOVE","text":"<p>Pops an element from a list, pushes it to another list and returns it. Blocks until an element is available otherwise. Deletes the list if the last element was moved.</p>"},{"location":"supported-commands/Redis/LIST/#blmpop","title":"BLMPOP","text":"<p>Pops the first element from one of multiple lists. Blocks until an element is available otherwise. Deletes the list if the last element was popped.</p>"},{"location":"supported-commands/Redis/LIST/#blpop","title":"BLPOP","text":"<p>Removes and returns the first element in a list. Blocks until an element is available otherwise. Deletes the list if the last element was popped.</p>"},{"location":"supported-commands/Redis/LIST/#brpop","title":"BRPOP","text":"<p>Removes and returns the last element in a list. Blocks until an element is available otherwise. Deletes the list if the last element was popped.</p>"},{"location":"supported-commands/Redis/LIST/#brpoplpush","title":"BRPOPLPUSH","text":"<p>Pops an element from a list, pushes it to another list and returns it. Block until an element is available otherwise. Deletes the list if the last element was popped.</p>"},{"location":"supported-commands/Redis/LIST/#lindex","title":"LINDEX","text":"<p>Returns an element from a list by its index.</p>"},{"location":"supported-commands/Redis/LIST/#linsert","title":"LINSERT","text":"<p>Inserts an element before or after another element in a list.</p>"},{"location":"supported-commands/Redis/LIST/#llen","title":"LLEN","text":"<p>Returns the length of a list.</p>"},{"location":"supported-commands/Redis/LIST/#lmove","title":"LMOVE","text":"<p>Returns an element after popping it from one list and pushing it to another. Deletes the list if the last element was moved.</p>"},{"location":"supported-commands/Redis/LIST/#lmpop","title":"LMPOP","text":"<p>Returns multiple elements from a list after removing them. Deletes the list if the last element was popped.</p>"},{"location":"supported-commands/Redis/LIST/#lpop","title":"LPOP","text":"<p>Returns the first elements in a list after removing it. Deletes the list if the last element was popped.</p>"},{"location":"supported-commands/Redis/LIST/#lpos","title":"LPOS","text":"<p>Returns the index of matching elements in a list.</p>"},{"location":"supported-commands/Redis/LIST/#lpush","title":"LPUSH","text":"<p>Prepends one or more elements to a list. Creates the key if it doesn't exist.</p>"},{"location":"supported-commands/Redis/LIST/#lpushx","title":"LPUSHX","text":"<p>Prepends one or more elements to a list only when the list exists.</p>"},{"location":"supported-commands/Redis/LIST/#lrange","title":"LRANGE","text":"<p>Returns a range of elements from a list.</p>"},{"location":"supported-commands/Redis/LIST/#lrem","title":"LREM","text":"<p>Removes elements from a list. Deletes the list if the last element was removed.</p>"},{"location":"supported-commands/Redis/LIST/#lset","title":"LSET","text":"<p>Sets the value of an element in a list by its index.</p>"},{"location":"supported-commands/Redis/LIST/#ltrim","title":"LTRIM","text":"<p>Removes elements from both ends a list. Deletes the list if all elements were trimmed.</p>"},{"location":"supported-commands/Redis/LIST/#rpop","title":"RPOP","text":"<p>Returns and removes the last elements of a list. Deletes the list if the last element was popped.</p>"},{"location":"supported-commands/Redis/LIST/#rpoplpush","title":"RPOPLPUSH","text":"<p>Returns the last element of a list after removing and pushing it to another list. Deletes the list if the last element was popped.</p>"},{"location":"supported-commands/Redis/LIST/#rpush","title":"RPUSH","text":"<p>Appends one or more elements to a list. Creates the key if it doesn't exist.</p>"},{"location":"supported-commands/Redis/LIST/#rpushx","title":"RPUSHX","text":"<p>Appends an element to a list only when the list exists.</p>"},{"location":"supported-commands/Redis/PUBSUB/","title":"Redis <code>pubsub</code> commands (15/15 implemented)","text":""},{"location":"supported-commands/Redis/PUBSUB/#psubscribe","title":"PSUBSCRIBE","text":"<p>Listens for messages published to channels that match one or more patterns.</p>"},{"location":"supported-commands/Redis/PUBSUB/#publish","title":"PUBLISH","text":"<p>Posts a message to a channel.</p>"},{"location":"supported-commands/Redis/PUBSUB/#pubsub","title":"PUBSUB","text":"<p>A container for Pub/Sub commands.</p>"},{"location":"supported-commands/Redis/PUBSUB/#pubsub-channels","title":"PUBSUB CHANNELS","text":"<p>Returns the active channels.</p>"},{"location":"supported-commands/Redis/PUBSUB/#pubsub-help","title":"PUBSUB HELP","text":"<p>Returns helpful text about the different subcommands.</p>"},{"location":"supported-commands/Redis/PUBSUB/#pubsub-numpat","title":"PUBSUB NUMPAT","text":"<p>Returns a count of unique pattern subscriptions.</p>"},{"location":"supported-commands/Redis/PUBSUB/#pubsub-numsub","title":"PUBSUB NUMSUB","text":"<p>Returns a count of subscribers to channels.</p>"},{"location":"supported-commands/Redis/PUBSUB/#pubsub-shardchannels","title":"PUBSUB SHARDCHANNELS","text":"<p>Returns the active shard channels.</p>"},{"location":"supported-commands/Redis/PUBSUB/#pubsub-shardnumsub","title":"PUBSUB SHARDNUMSUB","text":"<p>Returns the count of subscribers of shard channels.</p>"},{"location":"supported-commands/Redis/PUBSUB/#punsubscribe","title":"PUNSUBSCRIBE","text":"<p>Stops listening to messages published to channels that match one or more patterns.</p>"},{"location":"supported-commands/Redis/PUBSUB/#spublish","title":"SPUBLISH","text":"<p>Post a message to a shard channel</p>"},{"location":"supported-commands/Redis/PUBSUB/#ssubscribe","title":"SSUBSCRIBE","text":"<p>Listens for messages published to shard channels.</p>"},{"location":"supported-commands/Redis/PUBSUB/#subscribe","title":"SUBSCRIBE","text":"<p>Listens for messages published to channels.</p>"},{"location":"supported-commands/Redis/PUBSUB/#sunsubscribe","title":"SUNSUBSCRIBE","text":"<p>Stops listening to messages posted to shard channels.</p>"},{"location":"supported-commands/Redis/PUBSUB/#unsubscribe","title":"UNSUBSCRIBE","text":"<p>Stops listening to messages posted to channels.</p>"},{"location":"supported-commands/Redis/SCRIPTING/","title":"Redis <code>scripting</code> commands (7/22 implemented)","text":""},{"location":"supported-commands/Redis/SCRIPTING/#eval","title":"EVAL","text":"<p>Executes a server-side Lua script.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#evalsha","title":"EVALSHA","text":"<p>Executes a server-side Lua script by SHA1 digest.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#script","title":"SCRIPT","text":"<p>A container for Lua scripts management commands.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#script-exists","title":"SCRIPT EXISTS","text":"<p>Determines whether server-side Lua scripts exist in the script cache.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#script-flush","title":"SCRIPT FLUSH","text":"<p>Removes all server-side Lua scripts from the script cache.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#script-help","title":"SCRIPT HELP","text":"<p>Returns helpful text about the different subcommands.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#script-load","title":"SCRIPT LOAD","text":"<p>Loads a server-side Lua script to the script cache.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#unsupported-scripting-commands","title":"Unsupported scripting commands","text":"<p>To implement support for a command, see here </p>"},{"location":"supported-commands/Redis/SCRIPTING/#eval_ro-not-implemented","title":"EVAL_RO (not implemented)","text":"<p>Executes a read-only server-side Lua script.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#evalsha_ro-not-implemented","title":"EVALSHA_RO (not implemented)","text":"<p>Executes a read-only server-side Lua script by SHA1 digest.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#fcall-not-implemented","title":"FCALL (not implemented)","text":"<p>Invokes a function.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#fcall_ro-not-implemented","title":"FCALL_RO (not implemented)","text":"<p>Invokes a read-only function.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#function-not-implemented","title":"FUNCTION (not implemented)","text":"<p>A container for function commands.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#function-delete-not-implemented","title":"FUNCTION DELETE (not implemented)","text":"<p>Deletes a library and its functions.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#function-dump-not-implemented","title":"FUNCTION DUMP (not implemented)","text":"<p>Dumps all libraries into a serialized binary payload.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#function-flush-not-implemented","title":"FUNCTION FLUSH (not implemented)","text":"<p>Deletes all libraries and functions.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#function-kill-not-implemented","title":"FUNCTION KILL (not implemented)","text":"<p>Terminates a function during execution.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#function-list-not-implemented","title":"FUNCTION LIST (not implemented)","text":"<p>Returns information about all libraries.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#function-load-not-implemented","title":"FUNCTION LOAD (not implemented)","text":"<p>Creates a library.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#function-restore-not-implemented","title":"FUNCTION RESTORE (not implemented)","text":"<p>Restores all libraries from a payload.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#function-stats-not-implemented","title":"FUNCTION STATS (not implemented)","text":"<p>Returns information about a function during execution.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#script-debug-not-implemented","title":"SCRIPT DEBUG (not implemented)","text":"<p>Sets the debug mode of server-side Lua scripts.</p>"},{"location":"supported-commands/Redis/SCRIPTING/#script-kill-not-implemented","title":"SCRIPT KILL (not implemented)","text":"<p>Terminates a server-side Lua script during execution.</p>"},{"location":"supported-commands/Redis/SERVER/","title":"Redis <code>server</code> commands (23/70 implemented)","text":""},{"location":"supported-commands/Redis/SERVER/#acl-cat","title":"ACL CAT","text":"<p>Lists the ACL categories, or the commands inside a category.</p>"},{"location":"supported-commands/Redis/SERVER/#acl-deluser","title":"ACL DELUSER","text":"<p>Deletes ACL users, and terminates their connections.</p>"},{"location":"supported-commands/Redis/SERVER/#acl-genpass","title":"ACL GENPASS","text":"<p>Generates a pseudorandom, secure password that can be used to identify ACL users.</p>"},{"location":"supported-commands/Redis/SERVER/#acl-getuser","title":"ACL GETUSER","text":"<p>Lists the ACL rules of a user.</p>"},{"location":"supported-commands/Redis/SERVER/#acl-list","title":"ACL LIST","text":"<p>Dumps the effective rules in ACL file format.</p>"},{"location":"supported-commands/Redis/SERVER/#acl-load","title":"ACL LOAD","text":"<p>Reloads the rules from the configured ACL file.</p>"},{"location":"supported-commands/Redis/SERVER/#acl-log","title":"ACL LOG","text":"<p>Lists recent security events generated due to ACL rules.</p>"},{"location":"supported-commands/Redis/SERVER/#acl-save","title":"ACL SAVE","text":"<p>Saves the effective ACL rules in the configured ACL file.</p>"},{"location":"supported-commands/Redis/SERVER/#acl-setuser","title":"ACL SETUSER","text":"<p>Creates and modifies an ACL user and its rules.</p>"},{"location":"supported-commands/Redis/SERVER/#acl-users","title":"ACL USERS","text":"<p>Lists all ACL users.</p>"},{"location":"supported-commands/Redis/SERVER/#acl-whoami","title":"ACL WHOAMI","text":"<p>Returns the authenticated username of the current connection.</p>"},{"location":"supported-commands/Redis/SERVER/#bgsave","title":"BGSAVE","text":"<p>Asynchronously saves the database(s) to disk.</p>"},{"location":"supported-commands/Redis/SERVER/#command","title":"COMMAND","text":"<p>Returns detailed information about all commands.</p>"},{"location":"supported-commands/Redis/SERVER/#command-count","title":"COMMAND COUNT","text":"<p>Returns a count of commands.</p>"},{"location":"supported-commands/Redis/SERVER/#command-info","title":"COMMAND INFO","text":"<p>Returns information about one, multiple or all commands.</p>"},{"location":"supported-commands/Redis/SERVER/#config-set","title":"CONFIG SET","text":"<p>Sets configuration parameters in-flight.</p>"},{"location":"supported-commands/Redis/SERVER/#dbsize","title":"DBSIZE","text":"<p>Returns the number of keys in the database.</p>"},{"location":"supported-commands/Redis/SERVER/#flushall","title":"FLUSHALL","text":"<p>Removes all keys from all databases.</p>"},{"location":"supported-commands/Redis/SERVER/#flushdb","title":"FLUSHDB","text":"<p>Remove all keys from the current database.</p>"},{"location":"supported-commands/Redis/SERVER/#lastsave","title":"LASTSAVE","text":"<p>Returns the Unix timestamp of the last successful save to disk.</p>"},{"location":"supported-commands/Redis/SERVER/#save","title":"SAVE","text":"<p>Synchronously saves the database(s) to disk.</p>"},{"location":"supported-commands/Redis/SERVER/#swapdb","title":"SWAPDB","text":"<p>Swaps two Redis databases.</p>"},{"location":"supported-commands/Redis/SERVER/#time","title":"TIME","text":"<p>Returns the server time.</p>"},{"location":"supported-commands/Redis/SERVER/#unsupported-server-commands","title":"Unsupported server commands","text":"<p>To implement support for a command, see here </p>"},{"location":"supported-commands/Redis/SERVER/#acl-not-implemented","title":"ACL (not implemented)","text":"<p>A container for Access List Control commands.</p>"},{"location":"supported-commands/Redis/SERVER/#acl-dryrun-not-implemented","title":"ACL DRYRUN (not implemented)","text":"<p>Simulates the execution of a command by a user, without executing the command.</p>"},{"location":"supported-commands/Redis/SERVER/#bgrewriteaof-not-implemented","title":"BGREWRITEAOF (not implemented)","text":"<p>Asynchronously rewrites the append-only file to disk.</p>"},{"location":"supported-commands/Redis/SERVER/#command-docs-not-implemented","title":"COMMAND DOCS (not implemented)","text":"<p>Returns documentary information about one, multiple or all commands.</p>"},{"location":"supported-commands/Redis/SERVER/#command-getkeys-not-implemented","title":"COMMAND GETKEYS (not implemented)","text":"<p>Extracts the key names from an arbitrary command.</p>"},{"location":"supported-commands/Redis/SERVER/#command-getkeysandflags-not-implemented","title":"COMMAND GETKEYSANDFLAGS (not implemented)","text":"<p>Extracts the key names and access flags for an arbitrary command.</p>"},{"location":"supported-commands/Redis/SERVER/#command-list-not-implemented","title":"COMMAND LIST (not implemented)","text":"<p>Returns a list of command names.</p>"},{"location":"supported-commands/Redis/SERVER/#config-not-implemented","title":"CONFIG (not implemented)","text":"<p>A container for server configuration commands.</p>"},{"location":"supported-commands/Redis/SERVER/#config-get-not-implemented","title":"CONFIG GET (not implemented)","text":"<p>Returns the effective values of configuration parameters.</p>"},{"location":"supported-commands/Redis/SERVER/#config-resetstat-not-implemented","title":"CONFIG RESETSTAT (not implemented)","text":"<p>Resets the server's statistics.</p>"},{"location":"supported-commands/Redis/SERVER/#config-rewrite-not-implemented","title":"CONFIG REWRITE (not implemented)","text":"<p>Persists the effective configuration to file.</p>"},{"location":"supported-commands/Redis/SERVER/#failover-not-implemented","title":"FAILOVER (not implemented)","text":"<p>Starts a coordinated failover from a server to one of its replicas.</p>"},{"location":"supported-commands/Redis/SERVER/#info-not-implemented","title":"INFO (not implemented)","text":"<p>Returns information and statistics about the server.</p>"},{"location":"supported-commands/Redis/SERVER/#latency-not-implemented","title":"LATENCY (not implemented)","text":"<p>A container for latency diagnostics commands.</p>"},{"location":"supported-commands/Redis/SERVER/#latency-doctor-not-implemented","title":"LATENCY DOCTOR (not implemented)","text":"<p>Returns a human-readable latency analysis report.</p>"},{"location":"supported-commands/Redis/SERVER/#latency-graph-not-implemented","title":"LATENCY GRAPH (not implemented)","text":"<p>Returns a latency graph for an event.</p>"},{"location":"supported-commands/Redis/SERVER/#latency-help-not-implemented","title":"LATENCY HELP (not implemented)","text":"<p>Returns helpful text about the different subcommands.</p>"},{"location":"supported-commands/Redis/SERVER/#latency-histogram-not-implemented","title":"LATENCY HISTOGRAM (not implemented)","text":"<p>Returns the cumulative distribution of latencies of a subset or all commands.</p>"},{"location":"supported-commands/Redis/SERVER/#latency-history-not-implemented","title":"LATENCY HISTORY (not implemented)","text":"<p>Returns timestamp-latency samples for an event.</p>"},{"location":"supported-commands/Redis/SERVER/#latency-latest-not-implemented","title":"LATENCY LATEST (not implemented)","text":"<p>Returns the latest latency samples for all events.</p>"},{"location":"supported-commands/Redis/SERVER/#latency-reset-not-implemented","title":"LATENCY RESET (not implemented)","text":"<p>Resets the latency data for one or more events.</p>"},{"location":"supported-commands/Redis/SERVER/#lolwut-not-implemented","title":"LOLWUT (not implemented)","text":"<p>Displays computer art and the Redis version</p>"},{"location":"supported-commands/Redis/SERVER/#memory-not-implemented","title":"MEMORY (not implemented)","text":"<p>A container for memory diagnostics commands.</p>"},{"location":"supported-commands/Redis/SERVER/#memory-doctor-not-implemented","title":"MEMORY DOCTOR (not implemented)","text":"<p>Outputs a memory problems report.</p>"},{"location":"supported-commands/Redis/SERVER/#memory-malloc-stats-not-implemented","title":"MEMORY MALLOC-STATS (not implemented)","text":"<p>Returns the allocator statistics.</p>"},{"location":"supported-commands/Redis/SERVER/#memory-purge-not-implemented","title":"MEMORY PURGE (not implemented)","text":"<p>Asks the allocator to release memory.</p>"},{"location":"supported-commands/Redis/SERVER/#memory-stats-not-implemented","title":"MEMORY STATS (not implemented)","text":"<p>Returns details about memory usage.</p>"},{"location":"supported-commands/Redis/SERVER/#memory-usage-not-implemented","title":"MEMORY USAGE (not implemented)","text":"<p>Estimates the memory usage of a key.</p>"},{"location":"supported-commands/Redis/SERVER/#module-not-implemented","title":"MODULE (not implemented)","text":"<p>A container for module commands.</p>"},{"location":"supported-commands/Redis/SERVER/#module-list-not-implemented","title":"MODULE LIST (not implemented)","text":"<p>Returns all loaded modules.</p>"},{"location":"supported-commands/Redis/SERVER/#module-load-not-implemented","title":"MODULE LOAD (not implemented)","text":"<p>Loads a module.</p>"},{"location":"supported-commands/Redis/SERVER/#module-loadex-not-implemented","title":"MODULE LOADEX (not implemented)","text":"<p>Loads a module using extended parameters.</p>"},{"location":"supported-commands/Redis/SERVER/#module-unload-not-implemented","title":"MODULE UNLOAD (not implemented)","text":"<p>Unloads a module.</p>"},{"location":"supported-commands/Redis/SERVER/#monitor-not-implemented","title":"MONITOR (not implemented)","text":"<p>Listens for all requests received by the server in real-time.</p>"},{"location":"supported-commands/Redis/SERVER/#psync-not-implemented","title":"PSYNC (not implemented)","text":"<p>An internal command used in replication.</p>"},{"location":"supported-commands/Redis/SERVER/#replconf-not-implemented","title":"REPLCONF (not implemented)","text":"<p>An internal command for configuring the replication stream.</p>"},{"location":"supported-commands/Redis/SERVER/#replicaof-not-implemented","title":"REPLICAOF (not implemented)","text":"<p>Configures a server as replica of another, or promotes it to a master.</p>"},{"location":"supported-commands/Redis/SERVER/#restore-asking-not-implemented","title":"RESTORE-ASKING (not implemented)","text":"<p>An internal command for migrating keys in a cluster.</p>"},{"location":"supported-commands/Redis/SERVER/#role-not-implemented","title":"ROLE (not implemented)","text":"<p>Returns the replication role.</p>"},{"location":"supported-commands/Redis/SERVER/#shutdown-not-implemented","title":"SHUTDOWN (not implemented)","text":"<p>Synchronously saves the database(s) to disk and shuts down the Redis server.</p>"},{"location":"supported-commands/Redis/SERVER/#slaveof-not-implemented","title":"SLAVEOF (not implemented)","text":"<p>Sets a Redis server as a replica of another, or promotes it to being a master.</p>"},{"location":"supported-commands/Redis/SERVER/#slowlog-not-implemented","title":"SLOWLOG (not implemented)","text":"<p>A container for slow log commands.</p>"},{"location":"supported-commands/Redis/SERVER/#slowlog-get-not-implemented","title":"SLOWLOG GET (not implemented)","text":"<p>Returns the slow log's entries.</p>"},{"location":"supported-commands/Redis/SERVER/#slowlog-help-not-implemented","title":"SLOWLOG HELP (not implemented)","text":"<p>Show helpful text about the different subcommands</p>"},{"location":"supported-commands/Redis/SERVER/#slowlog-len-not-implemented","title":"SLOWLOG LEN (not implemented)","text":"<p>Returns the number of entries in the slow log.</p>"},{"location":"supported-commands/Redis/SERVER/#slowlog-reset-not-implemented","title":"SLOWLOG RESET (not implemented)","text":"<p>Clears all entries from the slow log.</p>"},{"location":"supported-commands/Redis/SERVER/#sync-not-implemented","title":"SYNC (not implemented)","text":"<p>An internal command used in replication.</p>"},{"location":"supported-commands/Redis/SET/","title":"Redis <code>set</code> commands (17/17 implemented)","text":""},{"location":"supported-commands/Redis/SET/#sadd","title":"SADD","text":"<p>Adds one or more members to a set. Creates the key if it doesn't exist.</p>"},{"location":"supported-commands/Redis/SET/#scard","title":"SCARD","text":"<p>Returns the number of members in a set.</p>"},{"location":"supported-commands/Redis/SET/#sdiff","title":"SDIFF","text":"<p>Returns the difference of multiple sets.</p>"},{"location":"supported-commands/Redis/SET/#sdiffstore","title":"SDIFFSTORE","text":"<p>Stores the difference of multiple sets in a key.</p>"},{"location":"supported-commands/Redis/SET/#sinter","title":"SINTER","text":"<p>Returns the intersect of multiple sets.</p>"},{"location":"supported-commands/Redis/SET/#sintercard","title":"SINTERCARD","text":"<p>Returns the number of members of the intersect of multiple sets.</p>"},{"location":"supported-commands/Redis/SET/#sinterstore","title":"SINTERSTORE","text":"<p>Stores the intersect of multiple sets in a key.</p>"},{"location":"supported-commands/Redis/SET/#sismember","title":"SISMEMBER","text":"<p>Determines whether a member belongs to a set.</p>"},{"location":"supported-commands/Redis/SET/#smembers","title":"SMEMBERS","text":"<p>Returns all members of a set.</p>"},{"location":"supported-commands/Redis/SET/#smismember","title":"SMISMEMBER","text":"<p>Determines whether multiple members belong to a set.</p>"},{"location":"supported-commands/Redis/SET/#smove","title":"SMOVE","text":"<p>Moves a member from one set to another.</p>"},{"location":"supported-commands/Redis/SET/#spop","title":"SPOP","text":"<p>Returns one or more random members from a set after removing them. Deletes the set if the last member was popped.</p>"},{"location":"supported-commands/Redis/SET/#srandmember","title":"SRANDMEMBER","text":"<p>Get one or multiple random members from a set</p>"},{"location":"supported-commands/Redis/SET/#srem","title":"SREM","text":"<p>Removes one or more members from a set. Deletes the set if the last member was removed.</p>"},{"location":"supported-commands/Redis/SET/#sscan","title":"SSCAN","text":"<p>Iterates over members of a set.</p>"},{"location":"supported-commands/Redis/SET/#sunion","title":"SUNION","text":"<p>Returns the union of multiple sets.</p>"},{"location":"supported-commands/Redis/SET/#sunionstore","title":"SUNIONSTORE","text":"<p>Stores the union of multiple sets in a key.</p>"},{"location":"supported-commands/Redis/SORTED-SET/","title":"Redis <code>sorted-set</code> commands (35/35 implemented)","text":""},{"location":"supported-commands/Redis/SORTED-SET/#bzmpop","title":"BZMPOP","text":"<p>Removes and returns a member by score from one or more sorted sets. Blocks until a member is available otherwise. Deletes the sorted set if the last element was popped.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#bzpopmax","title":"BZPOPMAX","text":"<p>Removes and returns the member with the highest score from one or more sorted sets. Blocks until a member available otherwise.  Deletes the sorted set if the last element was popped.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#bzpopmin","title":"BZPOPMIN","text":"<p>Removes and returns the member with the lowest score from one or more sorted sets. Blocks until a member is available otherwise. Deletes the sorted set if the last element was popped.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zadd","title":"ZADD","text":"<p>Adds one or more members to a sorted set, or updates their scores. Creates the key if it doesn't exist.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zcard","title":"ZCARD","text":"<p>Returns the number of members in a sorted set.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zcount","title":"ZCOUNT","text":"<p>Returns the count of members in a sorted set that have scores within a range.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zdiff","title":"ZDIFF","text":"<p>Returns the difference between multiple sorted sets.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zdiffstore","title":"ZDIFFSTORE","text":"<p>Stores the difference of multiple sorted sets in a key.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zincrby","title":"ZINCRBY","text":"<p>Increments the score of a member in a sorted set.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zinter","title":"ZINTER","text":"<p>Returns the intersect of multiple sorted sets.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zintercard","title":"ZINTERCARD","text":"<p>Returns the number of members of the intersect of multiple sorted sets.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zinterstore","title":"ZINTERSTORE","text":"<p>Stores the intersect of multiple sorted sets in a key.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zlexcount","title":"ZLEXCOUNT","text":"<p>Returns the number of members in a sorted set within a lexicographical range.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zmpop","title":"ZMPOP","text":"<p>Returns the highest- or lowest-scoring members from one or more sorted sets after removing them. Deletes the sorted set if the last member was popped.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zmscore","title":"ZMSCORE","text":"<p>Returns the score of one or more members in a sorted set.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zpopmax","title":"ZPOPMAX","text":"<p>Returns the highest-scoring members from a sorted set after removing them. Deletes the sorted set if the last member was popped.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zpopmin","title":"ZPOPMIN","text":"<p>Returns the lowest-scoring members from a sorted set after removing them. Deletes the sorted set if the last member was popped.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zrandmember","title":"ZRANDMEMBER","text":"<p>Returns one or more random members from a sorted set.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zrange","title":"ZRANGE","text":"<p>Returns members in a sorted set within a range of indexes.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zrangebylex","title":"ZRANGEBYLEX","text":"<p>Returns members in a sorted set within a lexicographical range.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zrangebyscore","title":"ZRANGEBYSCORE","text":"<p>Returns members in a sorted set within a range of scores.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zrangestore","title":"ZRANGESTORE","text":"<p>Stores a range of members from sorted set in a key.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zrank","title":"ZRANK","text":"<p>Returns the index of a member in a sorted set ordered by ascending scores.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zrem","title":"ZREM","text":"<p>Removes one or more members from a sorted set. Deletes the sorted set if all members were removed.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zremrangebylex","title":"ZREMRANGEBYLEX","text":"<p>Removes members in a sorted set within a lexicographical range. Deletes the sorted set if all members were removed.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zremrangebyrank","title":"ZREMRANGEBYRANK","text":"<p>Removes members in a sorted set within a range of indexes. Deletes the sorted set if all members were removed.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zremrangebyscore","title":"ZREMRANGEBYSCORE","text":"<p>Removes members in a sorted set within a range of scores. Deletes the sorted set if all members were removed.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zrevrange","title":"ZREVRANGE","text":"<p>Returns members in a sorted set within a range of indexes in reverse order.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zrevrangebylex","title":"ZREVRANGEBYLEX","text":"<p>Returns members in a sorted set within a lexicographical range in reverse order.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zrevrangebyscore","title":"ZREVRANGEBYSCORE","text":"<p>Returns members in a sorted set within a range of scores in reverse order.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zrevrank","title":"ZREVRANK","text":"<p>Returns the index of a member in a sorted set ordered by descending scores.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zscan","title":"ZSCAN","text":"<p>Iterates over members and scores of a sorted set.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zscore","title":"ZSCORE","text":"<p>Returns the score of a member in a sorted set.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zunion","title":"ZUNION","text":"<p>Returns the union of multiple sorted sets.</p>"},{"location":"supported-commands/Redis/SORTED-SET/#zunionstore","title":"ZUNIONSTORE","text":"<p>Stores the union of multiple sorted sets in a key.</p>"},{"location":"supported-commands/Redis/STREAM/","title":"Redis <code>stream</code> commands (20/20 implemented)","text":""},{"location":"supported-commands/Redis/STREAM/#xack","title":"XACK","text":"<p>Returns the number of messages that were successfully acknowledged by the consumer group member of a stream.</p>"},{"location":"supported-commands/Redis/STREAM/#xadd","title":"XADD","text":"<p>Appends a new message to a stream. Creates the key if it doesn't exist.</p>"},{"location":"supported-commands/Redis/STREAM/#xautoclaim","title":"XAUTOCLAIM","text":"<p>Changes, or acquires, ownership of messages in a consumer group, as if the messages were delivered to as consumer group member.</p>"},{"location":"supported-commands/Redis/STREAM/#xclaim","title":"XCLAIM","text":"<p>Changes, or acquires, ownership of a message in a consumer group, as if the message was delivered a consumer group member.</p>"},{"location":"supported-commands/Redis/STREAM/#xdel","title":"XDEL","text":"<p>Returns the number of messages after removing them from a stream.</p>"},{"location":"supported-commands/Redis/STREAM/#xgroup-create","title":"XGROUP CREATE","text":"<p>Creates a consumer group.</p>"},{"location":"supported-commands/Redis/STREAM/#xgroup-createconsumer","title":"XGROUP CREATECONSUMER","text":"<p>Creates a consumer in a consumer group.</p>"},{"location":"supported-commands/Redis/STREAM/#xgroup-delconsumer","title":"XGROUP DELCONSUMER","text":"<p>Deletes a consumer from a consumer group.</p>"},{"location":"supported-commands/Redis/STREAM/#xgroup-destroy","title":"XGROUP DESTROY","text":"<p>Destroys a consumer group.</p>"},{"location":"supported-commands/Redis/STREAM/#xgroup-setid","title":"XGROUP SETID","text":"<p>Sets the last-delivered ID of a consumer group.</p>"},{"location":"supported-commands/Redis/STREAM/#xinfo-consumers","title":"XINFO CONSUMERS","text":"<p>Returns a list of the consumers in a consumer group.</p>"},{"location":"supported-commands/Redis/STREAM/#xinfo-groups","title":"XINFO GROUPS","text":"<p>Returns a list of the consumer groups of a stream.</p>"},{"location":"supported-commands/Redis/STREAM/#xinfo-stream","title":"XINFO STREAM","text":"<p>Returns information about a stream.</p>"},{"location":"supported-commands/Redis/STREAM/#xlen","title":"XLEN","text":"<p>Return the number of messages in a stream.</p>"},{"location":"supported-commands/Redis/STREAM/#xpending","title":"XPENDING","text":"<p>Returns the information and entries from a stream consumer group's pending entries list.</p>"},{"location":"supported-commands/Redis/STREAM/#xrange","title":"XRANGE","text":"<p>Returns the messages from a stream within a range of IDs.</p>"},{"location":"supported-commands/Redis/STREAM/#xread","title":"XREAD","text":"<p>Returns messages from multiple streams with IDs greater than the ones requested. Blocks until a message is available otherwise.</p>"},{"location":"supported-commands/Redis/STREAM/#xreadgroup","title":"XREADGROUP","text":"<p>Returns new or historical messages from a stream for a consumer in a group. Blocks until a message is available otherwise.</p>"},{"location":"supported-commands/Redis/STREAM/#xrevrange","title":"XREVRANGE","text":"<p>Returns the messages from a stream within a range of IDs in reverse order.</p>"},{"location":"supported-commands/Redis/STREAM/#xtrim","title":"XTRIM","text":"<p>Deletes messages from the beginning of a stream.</p>"},{"location":"supported-commands/Redis/STRING/","title":"Redis <code>string</code> commands (22/22 implemented)","text":""},{"location":"supported-commands/Redis/STRING/#append","title":"APPEND","text":"<p>Appends a string to the value of a key. Creates the key if it doesn't exist.</p>"},{"location":"supported-commands/Redis/STRING/#decr","title":"DECR","text":"<p>Decrements the integer value of a key by one. Uses 0 as initial value if the key doesn't exist.</p>"},{"location":"supported-commands/Redis/STRING/#decrby","title":"DECRBY","text":"<p>Decrements a number from the integer value of a key. Uses 0 as initial value if the key doesn't exist.</p>"},{"location":"supported-commands/Redis/STRING/#get","title":"GET","text":"<p>Returns the string value of a key.</p>"},{"location":"supported-commands/Redis/STRING/#getdel","title":"GETDEL","text":"<p>Returns the string value of a key after deleting the key.</p>"},{"location":"supported-commands/Redis/STRING/#getex","title":"GETEX","text":"<p>Returns the string value of a key after setting its expiration time.</p>"},{"location":"supported-commands/Redis/STRING/#getrange","title":"GETRANGE","text":"<p>Returns a substring of the string stored at a key.</p>"},{"location":"supported-commands/Redis/STRING/#getset","title":"GETSET","text":"<p>Returns the previous string value of a key after setting it to a new value.</p>"},{"location":"supported-commands/Redis/STRING/#incr","title":"INCR","text":"<p>Increments the integer value of a key by one. Uses 0 as initial value if the key doesn't exist.</p>"},{"location":"supported-commands/Redis/STRING/#incrby","title":"INCRBY","text":"<p>Increments the integer value of a key by a number. Uses 0 as initial value if the key doesn't exist.</p>"},{"location":"supported-commands/Redis/STRING/#incrbyfloat","title":"INCRBYFLOAT","text":"<p>Increment the floating point value of a key by a number. Uses 0 as initial value if the key doesn't exist.</p>"},{"location":"supported-commands/Redis/STRING/#lcs","title":"LCS","text":"<p>Finds the longest common substring.</p>"},{"location":"supported-commands/Redis/STRING/#mget","title":"MGET","text":"<p>Atomically returns the string values of one or more keys.</p>"},{"location":"supported-commands/Redis/STRING/#mset","title":"MSET","text":"<p>Atomically creates or modifies the string values of one or more keys.</p>"},{"location":"supported-commands/Redis/STRING/#msetnx","title":"MSETNX","text":"<p>Atomically modifies the string values of one or more keys only when all keys don't exist.</p>"},{"location":"supported-commands/Redis/STRING/#psetex","title":"PSETEX","text":"<p>Sets both string value and expiration time in milliseconds of a key. The key is created if it doesn't exist.</p>"},{"location":"supported-commands/Redis/STRING/#set","title":"SET","text":"<p>Sets the string value of a key, ignoring its type. The key is created if it doesn't exist.</p>"},{"location":"supported-commands/Redis/STRING/#setex","title":"SETEX","text":"<p>Sets the string value and expiration time of a key. Creates the key if it doesn't exist.</p>"},{"location":"supported-commands/Redis/STRING/#setnx","title":"SETNX","text":"<p>Set the string value of a key only when the key doesn't exist.</p>"},{"location":"supported-commands/Redis/STRING/#setrange","title":"SETRANGE","text":"<p>Overwrites a part of a string value with another by an offset. Creates the key if it doesn't exist.</p>"},{"location":"supported-commands/Redis/STRING/#strlen","title":"STRLEN","text":"<p>Returns the length of a string value.</p>"},{"location":"supported-commands/Redis/STRING/#substr","title":"SUBSTR","text":"<p>Returns a substring from a string value.</p>"},{"location":"supported-commands/Redis/TRANSACTIONS/","title":"Redis <code>transactions</code> commands (5/5 implemented)","text":""},{"location":"supported-commands/Redis/TRANSACTIONS/#discard","title":"DISCARD","text":"<p>Discards a transaction.</p>"},{"location":"supported-commands/Redis/TRANSACTIONS/#exec","title":"EXEC","text":"<p>Executes all commands in a transaction.</p>"},{"location":"supported-commands/Redis/TRANSACTIONS/#multi","title":"MULTI","text":"<p>Starts a transaction.</p>"},{"location":"supported-commands/Redis/TRANSACTIONS/#unwatch","title":"UNWATCH","text":"<p>Forgets about watched keys of a transaction.</p>"},{"location":"supported-commands/Redis/TRANSACTIONS/#watch","title":"WATCH","text":"<p>Monitors changes to keys to determine the execution of a transaction.</p>"},{"location":"supported-commands/RedisBloom/BF/","title":"RedisBloom <code>bf</code> commands (10/10 implemented)","text":""},{"location":"supported-commands/RedisBloom/BF/#bfadd","title":"BF.ADD","text":"<p>Adds an item to a Bloom Filter</p>"},{"location":"supported-commands/RedisBloom/BF/#bfcard","title":"BF.CARD","text":"<p>Returns the cardinality of a Bloom filter</p>"},{"location":"supported-commands/RedisBloom/BF/#bfexists","title":"BF.EXISTS","text":"<p>Checks whether an item exists in a Bloom Filter</p>"},{"location":"supported-commands/RedisBloom/BF/#bfinfo","title":"BF.INFO","text":"<p>Returns information about a Bloom Filter</p>"},{"location":"supported-commands/RedisBloom/BF/#bfinsert","title":"BF.INSERT","text":"<p>Adds one or more items to a Bloom Filter. A filter will be created if it does not exist</p>"},{"location":"supported-commands/RedisBloom/BF/#bfloadchunk","title":"BF.LOADCHUNK","text":"<p>Restores a filter previously saved using SCANDUMP</p>"},{"location":"supported-commands/RedisBloom/BF/#bfmadd","title":"BF.MADD","text":"<p>Adds one or more items to a Bloom Filter. A filter will be created if it does not exist</p>"},{"location":"supported-commands/RedisBloom/BF/#bfmexists","title":"BF.MEXISTS","text":"<p>Checks whether one or more items exist in a Bloom Filter</p>"},{"location":"supported-commands/RedisBloom/BF/#bfreserve","title":"BF.RESERVE","text":"<p>Creates a new Bloom Filter</p>"},{"location":"supported-commands/RedisBloom/BF/#bfscandump","title":"BF.SCANDUMP","text":"<p>Begins an incremental save of the bloom filter</p>"},{"location":"supported-commands/RedisBloom/CF/","title":"RedisBloom <code>cf</code> commands (12/12 implemented)","text":""},{"location":"supported-commands/RedisBloom/CF/#cfadd","title":"CF.ADD","text":"<p>Adds an item to a Cuckoo Filter</p>"},{"location":"supported-commands/RedisBloom/CF/#cfaddnx","title":"CF.ADDNX","text":"<p>Adds an item to a Cuckoo Filter if the item did not exist previously.</p>"},{"location":"supported-commands/RedisBloom/CF/#cfcount","title":"CF.COUNT","text":"<p>Return the number of times an item might be in a Cuckoo Filter</p>"},{"location":"supported-commands/RedisBloom/CF/#cfdel","title":"CF.DEL","text":"<p>Deletes an item from a Cuckoo Filter</p>"},{"location":"supported-commands/RedisBloom/CF/#cfexists","title":"CF.EXISTS","text":"<p>Checks whether one or more items exist in a Cuckoo Filter</p>"},{"location":"supported-commands/RedisBloom/CF/#cfinfo","title":"CF.INFO","text":"<p>Returns information about a Cuckoo Filter</p>"},{"location":"supported-commands/RedisBloom/CF/#cfinsert","title":"CF.INSERT","text":"<p>Adds one or more items to a Cuckoo Filter. A filter will be created if it does not exist</p>"},{"location":"supported-commands/RedisBloom/CF/#cfinsertnx","title":"CF.INSERTNX","text":"<p>Adds one or more items to a Cuckoo Filter if the items did not exist previously. A filter will be created if it does not exist</p>"},{"location":"supported-commands/RedisBloom/CF/#cfloadchunk","title":"CF.LOADCHUNK","text":"<p>Restores a filter previously saved using SCANDUMP</p>"},{"location":"supported-commands/RedisBloom/CF/#cfmexists","title":"CF.MEXISTS","text":"<p>Checks whether one or more items exist in a Cuckoo Filter</p>"},{"location":"supported-commands/RedisBloom/CF/#cfreserve","title":"CF.RESERVE","text":"<p>Creates a new Cuckoo Filter</p>"},{"location":"supported-commands/RedisBloom/CF/#cfscandump","title":"CF.SCANDUMP","text":"<p>Begins an incremental save of the bloom filter</p>"},{"location":"supported-commands/RedisBloom/CMS/","title":"RedisBloom <code>cms</code> commands (6/6 implemented)","text":""},{"location":"supported-commands/RedisBloom/CMS/#cmsincrby","title":"CMS.INCRBY","text":"<p>Increases the count of one or more items by increment</p>"},{"location":"supported-commands/RedisBloom/CMS/#cmsinfo","title":"CMS.INFO","text":"<p>Returns information about a sketch</p>"},{"location":"supported-commands/RedisBloom/CMS/#cmsinitbydim","title":"CMS.INITBYDIM","text":"<p>Initializes a Count-Min Sketch to dimensions specified by user</p>"},{"location":"supported-commands/RedisBloom/CMS/#cmsinitbyprob","title":"CMS.INITBYPROB","text":"<p>Initializes a Count-Min Sketch to accommodate requested tolerances.</p>"},{"location":"supported-commands/RedisBloom/CMS/#cmsmerge","title":"CMS.MERGE","text":"<p>Merges several sketches into one sketch</p>"},{"location":"supported-commands/RedisBloom/CMS/#cmsquery","title":"CMS.QUERY","text":"<p>Returns the count for one or more items in a sketch</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/","title":"RedisBloom <code>tdigest</code> commands (14/14 implemented)","text":""},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestadd","title":"TDIGEST.ADD","text":"<p>Adds one or more observations to a t-digest sketch</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestbyrank","title":"TDIGEST.BYRANK","text":"<p>Returns, for each input rank, an estimation of the value (floating-point) with that rank</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestbyrevrank","title":"TDIGEST.BYREVRANK","text":"<p>Returns, for each input reverse rank, an estimation of the value (floating-point) with that reverse rank</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestcdf","title":"TDIGEST.CDF","text":"<p>Returns, for each input value, an estimation of the fraction (floating-point) of (observations smaller than the given value + half the observations equal to the given value)</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestcreate","title":"TDIGEST.CREATE","text":"<p>Allocates memory and initializes a new t-digest sketch</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestinfo","title":"TDIGEST.INFO","text":"<p>Returns information and statistics about a t-digest sketch</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestmax","title":"TDIGEST.MAX","text":"<p>Returns the maximum observation value from a t-digest sketch</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestmerge","title":"TDIGEST.MERGE","text":"<p>Merges multiple t-digest sketches into a single sketch</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestmin","title":"TDIGEST.MIN","text":"<p>Returns the minimum observation value from a t-digest sketch</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestquantile","title":"TDIGEST.QUANTILE","text":"<p>Returns, for each input fraction, an estimation of the value (floating point) that is smaller than the given fraction of observations</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestrank","title":"TDIGEST.RANK","text":"<p>Returns, for each input value (floating-point), the estimated rank of the value (the number of observations in the sketch that are smaller than the value + half the number of observations that are equal to the value)</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestreset","title":"TDIGEST.RESET","text":"<p>Resets a t-digest sketch: empty the sketch and re-initializes it.</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigestrevrank","title":"TDIGEST.REVRANK","text":"<p>Returns, for each input value (floating-point), the estimated reverse rank of the value (the number of observations in the sketch that are larger than the value + half the number of observations that are equal to the value)</p>"},{"location":"supported-commands/RedisBloom/TDIGEST/#tdigesttrimmed_mean","title":"TDIGEST.TRIMMED_MEAN","text":"<p>Returns an estimation of the mean value from the sketch, excluding observation values outside the low and high cutoff quantiles</p>"},{"location":"supported-commands/RedisBloom/TOPK/","title":"RedisBloom <code>topk</code> commands (7/7 implemented)","text":""},{"location":"supported-commands/RedisBloom/TOPK/#topkadd","title":"TOPK.ADD","text":"<p>Increases the count of one or more items by increment</p>"},{"location":"supported-commands/RedisBloom/TOPK/#topkcount","title":"TOPK.COUNT","text":"<p>Return the count for one or more items are in a sketch</p>"},{"location":"supported-commands/RedisBloom/TOPK/#topkincrby","title":"TOPK.INCRBY","text":"<p>Increases the count of one or more items by increment</p>"},{"location":"supported-commands/RedisBloom/TOPK/#topkinfo","title":"TOPK.INFO","text":"<p>Returns information about a sketch</p>"},{"location":"supported-commands/RedisBloom/TOPK/#topklist","title":"TOPK.LIST","text":"<p>Return full list of items in Top K list</p>"},{"location":"supported-commands/RedisBloom/TOPK/#topkquery","title":"TOPK.QUERY","text":"<p>Checks whether one or more items are in a sketch</p>"},{"location":"supported-commands/RedisBloom/TOPK/#topkreserve","title":"TOPK.RESERVE","text":"<p>Initializes a TopK with specified parameters</p>"},{"location":"supported-commands/RedisJson/JSON/","title":"RedisJson <code>json</code> commands (22/22 implemented)","text":""},{"location":"supported-commands/RedisJson/JSON/#jsonarrappend","title":"JSON.ARRAPPEND","text":"<p>Append one or more json values into the array at path after the last element in it.</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonarrindex","title":"JSON.ARRINDEX","text":"<p>Returns the index of the first occurrence of a JSON scalar value in the array at path</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonarrinsert","title":"JSON.ARRINSERT","text":"<p>Inserts the JSON scalar(s) value at the specified index in the array at path</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonarrlen","title":"JSON.ARRLEN","text":"<p>Returns the length of the array at path</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonarrpop","title":"JSON.ARRPOP","text":"<p>Removes and returns the element at the specified index in the array at path</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonarrtrim","title":"JSON.ARRTRIM","text":"<p>Trims the array at path to contain only the specified inclusive range of indices from start to stop</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonclear","title":"JSON.CLEAR","text":"<p>Clears all values from an array or an object and sets numeric values to <code>0</code></p>"},{"location":"supported-commands/RedisJson/JSON/#jsondel","title":"JSON.DEL","text":"<p>Deletes a value</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonforget","title":"JSON.FORGET","text":"<p>Deletes a value</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonget","title":"JSON.GET","text":"<p>Gets the value at one or more paths in JSON serialized form</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonmerge","title":"JSON.MERGE","text":"<p>Merges a given JSON value into matching paths. Consequently, JSON values at matching paths are updated, deleted, or expanded with new children</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonmget","title":"JSON.MGET","text":"<p>Returns the values at a path from one or more keys</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonmset","title":"JSON.MSET","text":"<p>Sets or updates the JSON value of one or more keys</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonnumincrby","title":"JSON.NUMINCRBY","text":"<p>Increments the numeric value at path by a value</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonnummultby","title":"JSON.NUMMULTBY","text":"<p>Multiplies the numeric value at path by a value</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonobjkeys","title":"JSON.OBJKEYS","text":"<p>Returns the JSON keys of the object at path</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonobjlen","title":"JSON.OBJLEN","text":"<p>Returns the number of keys of the object at path</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonset","title":"JSON.SET","text":"<p>Sets or updates the JSON value at a path</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonstrappend","title":"JSON.STRAPPEND","text":"<p>Appends a string to a JSON string value at path</p>"},{"location":"supported-commands/RedisJson/JSON/#jsonstrlen","title":"JSON.STRLEN","text":"<p>Returns the length of the JSON String at path in key</p>"},{"location":"supported-commands/RedisJson/JSON/#jsontoggle","title":"JSON.TOGGLE","text":"<p>Toggles a boolean value</p>"},{"location":"supported-commands/RedisJson/JSON/#jsontype","title":"JSON.TYPE","text":"<p>Returns the type of the JSON value at path</p>"},{"location":"supported-commands/RedisSearch/SEARCH/","title":"Search commands","text":""},{"location":"supported-commands/RedisSearch/SEARCH/#unsupported-search-commands","title":"Unsupported search commands","text":"<p>To implement support for a command, see here </p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ft_list-not-implemented","title":"FT._LIST (not implemented)","text":"<p>Returns a list of all existing indexes</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftaggregate-not-implemented","title":"FT.AGGREGATE (not implemented)","text":"<p>Run a search query on an index and perform aggregate transformations on the results</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftaliasadd-not-implemented","title":"FT.ALIASADD (not implemented)","text":"<p>Adds an alias to the index</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftaliasdel-not-implemented","title":"FT.ALIASDEL (not implemented)","text":"<p>Deletes an alias from the index</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftaliasupdate-not-implemented","title":"FT.ALIASUPDATE (not implemented)","text":"<p>Adds or updates an alias to the index</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftalter-not-implemented","title":"FT.ALTER (not implemented)","text":"<p>Adds a new field to the index</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftconfig-get-not-implemented","title":"FT.CONFIG GET (not implemented)","text":"<p>Retrieves runtime configuration options</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftconfig-help-not-implemented","title":"FT.CONFIG HELP (not implemented)","text":"<p>Help description of runtime configuration options</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftconfig-set-not-implemented","title":"FT.CONFIG SET (not implemented)","text":"<p>Sets runtime configuration options</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftcreate-not-implemented","title":"FT.CREATE (not implemented)","text":"<p>Creates an index with the given spec</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftcursor-del-not-implemented","title":"FT.CURSOR DEL (not implemented)","text":"<p>Deletes a cursor</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftcursor-read-not-implemented","title":"FT.CURSOR READ (not implemented)","text":"<p>Reads from a cursor</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftdictadd-not-implemented","title":"FT.DICTADD (not implemented)","text":"<p>Adds terms to a dictionary</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftdictdel-not-implemented","title":"FT.DICTDEL (not implemented)","text":"<p>Deletes terms from a dictionary</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftdictdump-not-implemented","title":"FT.DICTDUMP (not implemented)","text":"<p>Dumps all terms in the given dictionary</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftdropindex-not-implemented","title":"FT.DROPINDEX (not implemented)","text":"<p>Deletes the index</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftexplain-not-implemented","title":"FT.EXPLAIN (not implemented)","text":"<p>Returns the execution plan for a complex query</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftexplaincli-not-implemented","title":"FT.EXPLAINCLI (not implemented)","text":"<p>Returns the execution plan for a complex query</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftinfo-not-implemented","title":"FT.INFO (not implemented)","text":"<p>Returns information and statistics on the index</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftprofile-not-implemented","title":"FT.PROFILE (not implemented)","text":"<p>Performs a <code>FT.SEARCH</code> or <code>FT.AGGREGATE</code> command and collects performance information</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftsearch-not-implemented","title":"FT.SEARCH (not implemented)","text":"<p>Searches the index with a textual query, returning either documents or just ids</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftspellcheck-not-implemented","title":"FT.SPELLCHECK (not implemented)","text":"<p>Performs spelling correction on a query, returning suggestions for misspelled terms</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftsyndump-not-implemented","title":"FT.SYNDUMP (not implemented)","text":"<p>Dumps the contents of a synonym group</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#ftsynupdate-not-implemented","title":"FT.SYNUPDATE (not implemented)","text":"<p>Creates or updates a synonym group with additional terms</p>"},{"location":"supported-commands/RedisSearch/SEARCH/#fttagvals-not-implemented","title":"FT.TAGVALS (not implemented)","text":"<p>Returns the distinct tags indexed in a Tag field</p>"},{"location":"supported-commands/RedisSearch/SUGGESTION/","title":"Suggestion commands","text":""},{"location":"supported-commands/RedisSearch/SUGGESTION/#unsupported-suggestion-commands","title":"Unsupported suggestion commands","text":"<p>To implement support for a command, see here </p>"},{"location":"supported-commands/RedisSearch/SUGGESTION/#ftsugadd-not-implemented","title":"FT.SUGADD (not implemented)","text":"<p>Adds a suggestion string to an auto-complete suggestion dictionary</p>"},{"location":"supported-commands/RedisSearch/SUGGESTION/#ftsugdel-not-implemented","title":"FT.SUGDEL (not implemented)","text":"<p>Deletes a string from a suggestion index</p>"},{"location":"supported-commands/RedisSearch/SUGGESTION/#ftsugget-not-implemented","title":"FT.SUGGET (not implemented)","text":"<p>Gets completion suggestions for a prefix</p>"},{"location":"supported-commands/RedisSearch/SUGGESTION/#ftsuglen-not-implemented","title":"FT.SUGLEN (not implemented)","text":"<p>Gets the size of an auto-complete suggestion dictionary</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/","title":"RedisTimeSeries <code>timeseries</code> commands (17/17 implemented)","text":""},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsadd","title":"TS.ADD","text":"<p>Append a sample to a time series</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsalter","title":"TS.ALTER","text":"<p>Update the retention, chunk size, duplicate policy, and labels of an existing time series</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tscreate","title":"TS.CREATE","text":"<p>Create a new time series</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tscreaterule","title":"TS.CREATERULE","text":"<p>Create a compaction rule</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsdecrby","title":"TS.DECRBY","text":"<p>Decrease the value of the sample with the maximum existing timestamp, or create a new sample with a value equal to the value of the sample with the maximum existing timestamp with a given decrement</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsdel","title":"TS.DEL","text":"<p>Delete all samples between two timestamps for a given time series</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsdeleterule","title":"TS.DELETERULE","text":"<p>Delete a compaction rule</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsget","title":"TS.GET","text":"<p>Get the sample with the highest timestamp from a given time series</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsincrby","title":"TS.INCRBY","text":"<p>Increase the value of the sample with the maximum existing timestamp, or create a new sample with a value equal to the value of the sample with the maximum existing timestamp with a given increment</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsinfo","title":"TS.INFO","text":"<p>Returns information and statistics for a time series</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsmadd","title":"TS.MADD","text":"<p>Append new samples to one or more time series</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsmget","title":"TS.MGET","text":"<p>Get the sample with the highest timestamp from each time series matching a specific filter</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsmrange","title":"TS.MRANGE","text":"<p>Query a range across multiple time series by filters in forward direction</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsmrevrange","title":"TS.MREVRANGE","text":"<p>Query a range across multiple time-series by filters in reverse direction</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsqueryindex","title":"TS.QUERYINDEX","text":"<p>Get all time series keys matching a filter list</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsrange","title":"TS.RANGE","text":"<p>Query a range in forward direction</p>"},{"location":"supported-commands/RedisTimeSeries/TIMESERIES/#tsrevrange","title":"TS.REVRANGE","text":"<p>Query a range in reverse direction</p>"}]}